{"version":3,"sources":["components/initial-data.js","components/FormTypes.jsx","components/TypeColumn.jsx","components/Styles.js","components/FormTypes/Header/EditFormValue.js","context/StateContext.js","components/FormTypes/Header/index.js","components/FormTypes/AddSelectOption.js","components/FormTypes/Autocomplete/EditFormValue.js","components/FormTypes/Autocomplete/index.js","components/FormTypes/Button/EditFormValue.js","components/FormTypes/Button/index.js","components/FormTypes/Checkbox/EditFormValue.js","components/FormTypes/Checkbox/index.js","components/FormTypes/Datefield/EditFormValue.js","components/FormTypes/Datefield/index.js","components/FormTypes/File/EditFormValue.js","components/FormTypes/File/index.js","components/FormTypes/Paragraph/EditFormValue.js","components/FormTypes/Paragraph/index.js","components/FormTypes/Radio/EditFormValue.js","components/FormTypes/Radio/index.js","components/FormTypes/Select/EditFormValue.js","components/FormTypes/Select/index.js","components/FormTypes/Number/EditFormValue.js","components/FormTypes/Number/index.js","components/FormTypes/Textfield/EditFormValue.js","components/FormTypes/Textfield/index.js","components/FormTypes/Textarea/EditFormValue.js","components/FormTypes/Textarea/index.js","components/MainFormTask.jsx","components/MainColumn.jsx","App.js","reportWebVitals.js","index.js"],"names":["initialData","types","columns","formType","id","title","formRender","Container","styled","div","props","isDragging","Clone","FromTypes","draggableId","this","type","index","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","label","React","Component","Title","h3","FormList","isDraggingOver","TypeColumn","column","droppableId","isDropDisabled","droppableProps","map","placeholder","FieldActions","TypesContainer","Label","ActionBtn","button","del","hoverBg","FormElemnts","FormGroup","EditLabel","InputWrap","ShortableOption","ol","ShortableOptionLi","li","RemoveBtn","AddOptionBtnContainer","AddOptionBtn","customStyles","container","state","width","EditFormValue","selectData","name","data","setData","onChangeHandeler","useForm","mode","defaultValues","register","getValues","setValue","onChange","value","console","log","subtype","nV","htmlFor","className","required","classNamePrefix","defaultValue","toUpperCase","isSearchable","options","styles","defaultState","handleRemoveClick","onChangeHandler","handleCopyClick","StateContext","createContext","headings","Header","useState","editIsOpen","setEditOpen","useEffect","Consumer","onClick","style","display","AddSelectOption","setSelectData","setList","onDragEnd","result","destination","items","list","startIndex","endIndex","Array","from","splice","removed","reorder","source","values","marginRight","marginLeft","i","key","multiple","defaultChecked","tempArray","length","str","newData","toLocaleUpperCase","selected","List","handleAddClick","control","useFieldArray","fields","selectDataE","Autocomplete","selectedData","setSelectedData","handleChange","color","fontSize","description","Tooltip","FormHelperText","buttons","v","Button","CheckBoxs","toggle","classNames","Checkbox","showOther","setShowOther","e","target","checked","k","inline","other","Date","startDate","toLocaleString","split","Datefield","setStartDate","placeholderText","date","File","minHeight","Paragraph","RadioGroup","check","Radio","onChangeValue","event","radio","SelectT","filter","dataa","isMulti","Numbers","maxWidth","Textfield","Textarea","renderFields","Select","MainFromTask","MainColumn","ButtonContainer","typesDefaultVal","App","start","finish","allData","newState","setState","finishTaskIds","newFinish","handleSet","handleGet","handleClear","previousProps","previousState","allTypes","Provider","ButtonGroup","aria-label","margin","JSON","stringify","src","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","ourComponent","window","document","getElementById"],"mappings":"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","file":"static/js/main.21325b2a.chunk.js","sourcesContent":["const initialData = {\r\n  types:[\r\n  {\r\n    \"type\": \"autocomplete\",\r\n    \"label\": \"Autocomplete\",\r\n  },\r\n  {\r\n    \"type\": \"button\",\r\n    \"label\": \"Button\",\r\n  },\r\n  {\r\n    \"type\": \"checkbox-group\",\r\n    \"label\": \"Checkbox Group\",\r\n  },\r\n  {\r\n    \"type\": \"date\",\r\n    \"label\": \"Date Field\",\r\n  },\r\n  {\r\n    \"type\": \"file\",\r\n    \"label\": \"File Upload\",\r\n  },\r\n  {\r\n    \"type\": \"header\",\r\n    \"label\": \"Header\",\r\n  },\r\n  {\r\n    \"type\": \"paragraph\",\r\n    \"label\": \"Paragraph\",\r\n  },\r\n  {\r\n    \"type\": \"radio-group\",\r\n    \"label\": \"Radio Group\",\r\n  },\r\n  {\r\n    \"type\": \"select\",\r\n    \"label\": \"Select\",\r\n  },\r\n  {\r\n    \"type\": \"text\",\r\n    \"label\": \"Text Field\",\r\n  },\r\n  {\r\n    \"type\": \"textarea\",\r\n    \"label\": \"Text Area\",\r\n  },\r\n   {\r\n    \"type\": \"number\",\r\n    \"label\": \"Number\",\r\n  }\r\n],\r\n  columns: {\r\n    formType: {\r\n      id: 'formType',\r\n      title: 'Types',\r\n      types: [\"autocomplete\", \"button\", \"checkbox-group\", \"date\", \"file\", \"header\", \"number\",\"paragraph\", \"radio-group\", \"select\", \"text\", \"textarea\"]\r\n    },\r\n    formRender: {\r\n      id: 'formRender',\r\n      title: 'Builded Form',\r\n      types: [],\r\n    },\r\n  },\r\n  // Facilitate reordering of the columns\r\n};\r\n\r\nexport default initialData;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n\r\nconst Container = styled.div`\r\n  border: 1px solid lightgrey;\r\n  border-radius: 2px;\r\n  padding: 8px;\r\n  margin-bottom: 8px;\r\n  background-color: ${props => (props.isDragging ? 'lightgreen' : 'white')};\r\n`;\r\nconst Clone = styled(Container)`\r\n  + div {\r\n    display: none!important;\r\n  }`\r\nexport default class FromTypes extends React.Component {\r\n  render() {\r\n    return (\r\n      <Draggable draggableId={this.props.type.type} index={this.props.index}>\r\n        {(provided, snapshot) => (\r\n          <>\r\n          <Container\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            ref={provided.innerRef}\r\n            isDragging={snapshot.isDragging}\r\n          >\r\n            {this.props.type.label}\r\n          </Container>\r\n          {snapshot.isDragging && (<Clone>{this.props.type.label}</Clone>)}\r\n          </>\r\n          )}\r\n      </Draggable>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport FromTypes from './FormTypes';\r\n\r\nconst Container = styled.div`\r\n  margin: 8px;\r\n  border: 1px solid lightgrey;\r\n  border-radius: 2px;\r\n  width: 220px;\r\n  width: 20%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst Title = styled.h3`\r\n  padding: 8px;\r\n`;\r\nconst FormList = styled.div`\r\n  padding: 8px;\r\n  transition: background-color 0.2s ease;\r\n  background-color: ${props => (props.isDraggingOver ? 'skyblue' : 'white')};\r\n  flex-grow: 1;\r\n  min-height: 100px;\r\n`;\r\n\r\nexport default class TypeColumn extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Title>{this.props.column.title}</Title>\r\n        <Droppable droppableId={this.props.column.id} isDropDisabled={true}>\r\n          {(provided, snapshot) => {\r\n            return(\r\n            <FormList\r\n              ref={provided.innerRef}\r\n              {...provided.droppableProps}\r\n              isDraggingOver={snapshot.isDraggingOver}\r\n            >\r\n              {this.props.types.map((type, index) => <FromTypes key={type.type} type={type} index={index} />)}\r\n              { provided.placeholder}\r\n            </FormList>\r\n          )\r\n          }}\r\n        </Droppable>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import styled from 'styled-components';\r\nexport const FieldActions = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    opacity: 0;\r\n    &:hover{\r\n    opacity: 1;\r\n    }\r\n`\r\nexport const TypesContainer = styled.div`\r\n    position: relative;\r\n    padding: 6px;\r\n    clear: both;\r\n    margin-left: 0;\r\n    margin-bottom: 3px;\r\n    background-color: #fff;\r\n    transition: background-color 250ms ease-in-out, margin-top 400ms;\r\n    &:hover ${FieldActions} {\r\n    opacity: 1;\r\n  }\r\n    &:hover{\r\n    border-color: #66afe9;\r\n    outline: 0;\r\n    box-shadow: inset 0 1px 1px rgb(0 0 0 / 10%), 0 0 8px rgb(102 175 233 / 60%);\r\n    }\r\n    &:first-child {\r\n    border-top-right-radius: 5px;\r\n    border-top-left-radius: 5px;\r\n}\r\n`\r\nexport const Label = styled.label`\r\n    color: #666;\r\n    margin-bottom: 5px;\r\n    line-height: 27px;\r\n    font-size: 16px;\r\n    font-weight: normal;\r\n    display: inline-block;\r\n    max-width: 100%;\r\n`\r\nexport const ActionBtn= styled.button`\r\n    display: inline-block;\r\n    width: 32px;\r\n    height: 32px;\r\n    padding: 0 6px;\r\n    border-radius: 0;\r\n    border-color: #c5c5c5;\r\n    background-color: #fff;\r\n    color: #c5c5c5;\r\n    line-height: 32px;\r\n    font-size: 16px;\r\n    border-width: 0 0 1px 1px;\r\n    cursor:pointer;\r\n    &:first-child {\r\n        border-bottom-left-radius: 5px;\r\n    }        \r\n    &:hover ${TypesContainer} {\r\n        background-color:${props=>props.del ?'red' : '#fff'}\r\n    }\r\n    &:hover{\r\n        background-color: ${props=> props.hoverBg};\r\n        color: #fff;\r\n    }\r\n`\r\nexport const FormElemnts = styled.div`\r\n    padding: 10px 10px;\r\n    background: #f7f7f7;\r\n    border-radius: 3px;\r\n    margin: 0;\r\n    border: 1px solid #c5c5c5;`\r\nexport const FormGroup = styled.div`\r\n    width: 100%;\r\n    clear: left;\r\n    display:flex;\r\n    margin-left: 0px;\r\n    margin-bottom: 15px;\r\n    box-sizing: border-box;\r\n   \r\n    `\r\n    export const EditLabel = styled.label`\r\n        width:16%;\r\n        text-align:right;\r\n        margin-right:3%;\r\n        padding-top: 7px;\r\n        margin-bottom: 0;\r\n        font-weight: 700;\r\n        white-space: nowrap;\r\n        text-transform: capitalize;\r\n    `\r\nexport const InputWrap= styled.div`\r\n    display: block;\r\n    padding: 6px 12px;\r\n    line-height: 1.42857143;\r\n    border-radius: 4px;\r\n    width: 100%;\r\n    font-size: 14px;\r\n    border-radius: 4px;`\r\n\r\nexport const ShortableOption= styled.ol`\r\n    display: block;\r\n    padding: 6px 12px;\r\n    line-height: 1.42857143;\r\n    border-radius: 4px;\r\n    width: 100%;\r\n    font-size: 14px;\r\n    border: 1px solid #c5c5c5;\r\n`\r\n\r\n    export const ShortableOptionLi= styled.li`\r\n    display: flex;\r\n    min-height:28px;\r\n    cursor: move;\r\n    margin: 1px;\r\n    padding-right: 28px;\r\n    clear: both;\r\n    margin: 15px;\r\n    margin-bottom: 3px;\r\n    background-color: #fff;\r\n    transition: background-color 250ms ease-in-out, margin-top 400ms;\r\n`\r\n\r\n    export const RemoveBtn= styled.div`\r\n    opacity: 1;\r\n    right: 8px;\r\n    height: 18px;\r\n    width: 18px;\r\n    margin-left:8px;\r\n    top: 14px;\r\n    color: red;\r\n    display: inline-block;\r\n    padding: 6px 12px;\r\n    margin-bottom: 0;\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    line-height: 1.42857143;\r\n    text-align: center;\r\n    white-space: nowrap;\r\n    vertical-align: middle;\r\n    touch-action: manipulation;\r\n    cursor: pointer;\r\n    -webkit-user-select: none;\r\n    user-select: none;\r\n    border-radius: 4px;\r\n    &:hover{\r\n    background-color: red;\r\n    text-decoration: none;\r\n    color: #fff;\r\n    }\r\n    &:hover${ShortableOptionLi}{\r\n    background-color: #fdd;\r\n    }\r\n    &:before{\r\n        font-style: normal;\r\n        font-weight: normal;\r\n        speak: never;\r\n        display: inline-block;\r\n        text-decoration: inherit;\r\n        width: 1em;\r\n        margin-right: .2em;\r\n        text-align: center;\r\n        font-variant: normal;\r\n        text-transform: none;\r\n        line-height: 1em;\r\n    }`\r\n    export const AddOptionBtnContainer= styled.div`\r\n    text-align: right;\r\n    margin-top: 10px;\r\n    width: 100%;\r\n    margin-left: 2%;\r\n    `\r\n   export const AddOptionBtn= styled.div`\r\n    background: #fff;\r\n    padding: 5px 10px;\r\n    border: 1px solid #c5c5c5;\r\n    font-size: 14px;\r\n    border-radius: 5px;\r\n    float:right;\r\n    cursor: default;`","import React from 'react'\r\nimport { useForm, } from \"react-hook-form\";\r\nimport {FormElemnts,FormGroup,InputWrap,EditLabel} from '../../Styles'\r\nimport Select from 'react-select'\r\nconst customStyles = {\r\n  container: (provided, state) => ({\r\n    ...provided,\r\n    width: '100%',\r\n  }),\r\n}\r\nfunction EditFormValue({selectData,name,index,data,setData,onChangeHandeler}) {\r\n    const {register,getValues, setValue} = useForm({mode: 'onChange',  defaultValues:data})\r\n    // useEffect(()=>{\r\n    //    let value = watch()\r\n    //    console.log(value)\r\n    //    if(value.subtype){\r\n    //        let nV = {...value,subtype:value.subtype.value}\r\n    //        setData(nV)\r\n    //    }else{\r\n    //        setData(value)\r\n    //    }\r\n    // },[])\r\n    const handleChange=(data)=>{\r\n        let value = getValues()\r\n        console.log(value)\r\n        setValue('subtype',data.value)\r\n        let nV = {...value,subtype:data.value}\r\n        console.log(nV)\r\n        setData(nV)\r\n        onChangeHandeler(nV,index)\r\n    }\r\n    const onChange=()=>{\r\n       let value = getValues()\r\n       console.log(value)\r\n       if(value.subtype && value.subtype.value){\r\n           let nV = {...value,subtype:value.subtype.value}\r\n           setData(nV)\r\n        onChangeHandeler(nV,index)\r\n\r\n       }else{\r\n           setData(value)\r\n        onChangeHandeler(value,index)\r\n\r\n       }\r\n    }\r\n    return (\r\n        <FormElemnts>\r\n        <form onChange={onChange}>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={name}>Label</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={name} className={'inputItems'} {...register('label', { required: true })}/>\r\n                </InputWrap>\r\n                    \r\n            </FormGroup>\r\n            <FormGroup>\r\n              <EditLabel>Types</EditLabel>\r\n              <InputWrap>\r\n               {/* <Controller\r\n                name=\"subtype\"\r\n                control={control}\r\n                render={({ field }) => <Select \r\n                 {...field} \r\n                className=\"basic-single\"\r\n                classNamePrefix=\"select\"\r\n                defaultValue={{value:data.subtype,label:data.subtype.toUpperCase()}}\r\n                isSearchable={false}\r\n                name=\"color\"\r\n                options={selectData}\r\n                styles={customStyles}\r\n                />}\r\n      /> */}\r\n             <Select \r\n                className=\"basic-single\"\r\n                classNamePrefix=\"select\"\r\n                defaultValue={{value:data.subtype,label:data.subtype.toUpperCase()}}\r\n                isSearchable={false}\r\n                name=\"color\"\r\n                options={selectData}\r\n                styles={customStyles}\r\n                onChange={handleChange}\r\n                />\r\n              \r\n                </InputWrap> \r\n              \r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'className'}>class</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'className'} className={'inputItems'} placeholder=\"use space for separeted class name\" {...register('className')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            </form>\r\n        </FormElemnts>\r\n    )\r\n}\r\n\r\nexport default EditFormValue\r\n","import React from 'react';\r\n\r\nconst defaultState = {\r\n  data: [],\r\n  handleRemoveClick:()=>{},\r\n  onChangeHandler:()=>{},\r\n  handleCopyClick:()=>{},\r\n};\r\n\r\nconst StateContext = React.createContext(defaultState);\r\nexport default StateContext;\r\n","import React, { useEffect, useState } from 'react'\r\nimport {TypesContainer,FieldActions,Label, ActionBtn} from '../../Styles'\r\nimport { AiOutlineEdit,AiOutlineDelete,AiOutlineCopy } from \"react-icons/ai\";\r\nimport EditFormValue from './EditFormValue';\r\nimport StateContext from '../../../context/StateContext';\r\nconst headings =[\r\n  {value:'h1',label:'H1'},\r\n  {value:'h2',label:'H2'},\r\n  {value:'h3',label:'H3'},\r\n  {value:'h4',label:'H4'},\r\n  {value:'h5',label:'H5'},\r\n  {value:'h6',label:'H6'},\r\n\r\n]\r\n\r\nconst Header  =({type,name,index})=> {\r\n    const [data,setData] = useState(null)\r\n    const [editIsOpen,setEditOpen] = useState(false)\r\n    useEffect(()=>{\r\n      setData(type)\r\n    },[type])\r\n    useEffect(()=>{\r\n      setData(type)\r\n    },[])\r\n    return (\r\n        <StateContext.Consumer>\r\n          {({handleRemoveClick,onChangeHandler,handleCopyClick})=>{\r\n            return(<TypesContainer>\r\n                <FieldActions >\r\n                <ActionBtn onClick={()=>handleRemoveClick(index)} hoverBg={'#c66865'} del={true}><AiOutlineDelete/></ActionBtn>\r\n                <ActionBtn hoverBg={'#65aac6'} onClick={()=>setEditOpen(!editIsOpen)}><AiOutlineEdit/></ActionBtn>\r\n                <ActionBtn hoverBg={'#6fc665'} onClick={()=>handleCopyClick(index,data)}><AiOutlineCopy/></ActionBtn>\r\n                </FieldActions>\r\n                {editIsOpen && <Label htmlFor={name} >{data.label}</Label>}\r\n                {!editIsOpen && data &&<data.subtype className={data.className}>{data.label}</data.subtype>}\r\n                <div style={{display:'block'}}>\r\n                  {editIsOpen && <EditFormValue selectData={headings} setData={setData} onChangeHandeler={onChangeHandler} index={index} data={data} name={name}/>}\r\n                </div>\r\n                </TypesContainer>)\r\n          }}\r\n            </StateContext.Consumer>\r\n          )\r\n\r\n}\r\n\r\nexport default  Header\r\n","import React, { useEffect, useState,createContext } from 'react'\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { AiOutlineDelete } from \"react-icons/ai\";\r\nimport { useForm,useFieldArray, } from \"react-hook-form\";\r\nimport { AddOptionBtn, AddOptionBtnContainer, RemoveBtn, ShortableOption, ShortableOptionLi } from '../Styles';\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\nfunction AddSelectOption({selectData,setSelectData,data,onChangeHandeler,index,register,setValue}) {\r\n    const ListContext = createContext(selectData);\r\n    const [List,setList] = useState(null)\r\n  //   const {register,getValues,watch ,control,setValue} = useForm({mode: 'onChange',})\r\n  //    const { fields, append, prepend, remove, swap, move, insert } = useFieldArray({\r\n  //   control, // control props comes from useForm (optional: if you are using FormContext)\r\n  //   name: \"arr\", // unique name for your Field Array\r\n  //   // keyName: \"id\", default to \"id\", you can change the key name\r\n  // })\r\n  //   const onChange=()=>{\r\n  //      let value = getValues('arr')\r\n  //       setSelectData([...value])\r\n  //       let values = {...data,values:[...value]}\r\n  //       onChangeHandeler(values,index)\r\n  //   }\r\n    // const [list,setList]= useState(null)\r\n  useEffect(()=>{\r\n      setList(selectData)\r\n      \r\n    },[])\r\n    useEffect(()=>{\r\n      setList(selectData)\r\n      \r\n    },[selectData])\r\n\r\n    const onDragEnd =(result) =>{\r\n    // dropped outside the list\r\n    if (!result.destination) {\r\n    return;\r\n    }\r\n    // let value = getValues('arr')\r\n    const items = reorder(\r\n    selectData,\r\n    result.source.index,\r\n    result.destination.index\r\n    );\r\n    setList(items);\r\n    setSelectData(items)\r\n    setValue('values',items)\r\n    let values = {...data,values:items}\r\n    onChangeHandeler(values,index)\r\n\r\n  }\r\n    const handleRemoveClick = i => {   \r\n             console.log(i)             \r\n            const tempArray = [...selectData];\r\n            tempArray.splice(i, 1)\r\n            setSelectData([...tempArray])\r\n            setValue('values',[...tempArray])\r\n\r\n            let values = {...data,values:[...tempArray]}\r\n                onChangeHandeler(values,index)\r\n            if(!tempArray.length){\r\n            }\r\n        };\r\n    const handleAddClick = (i) => {\r\n            console.log(i)\r\n            let str = `option${selectData.length+1}`\r\n            let newData = {value:str,label:str.toLocaleUpperCase(),selected:false}\r\n            if(data.type === 'radio-group') newData = {value:str,label:str.toLocaleUpperCase()}\r\n            let List =[...selectData,newData]\r\n            setSelectData([...List])\r\n              let values = {...data,values:[...List]}\r\n            onChangeHandeler(values,index)\r\n            console.log(List)\r\n    }\r\n    return (\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"droppable\">\r\n          {(provided, snapshot) => (\r\n              <>\r\n              <ShortableOption {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n              >\r\n                <ShortableOptionLi >\r\n                  {data.type !== 'autocomplete'  && <h4 style={{marginRight: \"28%\",marginLeft:'3%'}}>Value</h4>} \r\n                    <h4 style={{marginRight: \"20%\"}}>Label</h4>\r\n                    <h4 style={{marginRight: \"7%\"}}>Delete</h4>\r\n                </ShortableOptionLi>\r\n                  {selectData && selectData.map((value,i)=>{ \r\n                  return(\r\n                 <Draggable key={`${value.value}_${value.label}`} draggableId={`${value.value}_${value.label}`} index={i}>\r\n                  {(provided, snapshot) => (\r\n                    <ShortableOptionLi\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                      key={`${value.value}_${value.label}`}\r\n                    >\r\n                    {data.type === 'select' && !data.multiple && <input type='radio' defaultChecked={'option-1'=== value.value} value={`${value.value}`} name={`radio`}  {...register(`radio`)} style={{marginRight:'7%'}}/>}\r\n                    {data.type === 'select' && data.multiple && <input type='checkbox' name={`${value.value}_${value.label}`}  {...register(`values.${i}.selected`)} style={{marginRight:'7%'}}/>}\r\n                    {data.type === 'radio-group' && <input type='radio' name={`radio`}  defaultChecked={'option-1'=== value.value} value={`${value.value}`} {...register(`radio`)}  style={{marginRight:'7%'}}/>}\r\n                    {data.type === 'checkbox-group' && <input type='checkbox' name={`${value.value}_${value.label}`}  {...register(`values.${i}.selected`)} style={{marginRight:'7%'}}/>}\r\n                    <input type='text' name={`${value.value}_${value.label}`}  {...register(`values.${i}.value`)} defaultValue={value.value} style={{marginRight:'7%'}}/>\r\n                    <input type='text' name={`${value.value}_${value.label}`}  {...register(`values.${i}.label`)} defaultValue={value.label} style={{marginRight:'7%'}}/>\r\n                    {i !==0 &&<RemoveBtn onClick={()=>handleRemoveClick(i)}><AiOutlineDelete/></RemoveBtn>}\r\n                    </ShortableOptionLi>\r\n                  )}\r\n                </Draggable>\r\n                )})}\r\n                \r\n              {provided.placeholder}\r\n              </ShortableOption>\r\n              <AddOptionBtnContainer>\r\n                <AddOptionBtn onClick={()=>handleAddClick(selectData.length)} >Add Option +</AddOptionBtn>\r\n            </AddOptionBtnContainer>\r\n             {/* <div\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n              \r\n            >\r\n            {selectData && selectData.map((value,i)=>{ \r\n                  return(\r\n                <Draggable key={`${value.value}_${value.label}`} draggableId={`${value.value}_${value.label}`} index={i}>\r\n                  {(provided, snapshot) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                    >\r\n                    <li>Line {`${value.value}_${value.label}`} <input type='text' name={'vaule'+i}  {...register(`values.${i}.value`)} defaultValue={value.value} style={{marginRight:'7%'}}/>\r\n                    <input type='text' name={'label'+i}  {...register(`values.${i}.label`)} defaultValue={value.label} style={{marginRight:'7%'}}/>\r\n                    {i !==0 &&<RemoveBtn onClick={()=>handleRemoveClick(i)}><AiOutlineDelete/></RemoveBtn>}</li>\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              )})}*/}\r\n              {provided.placeholder}\r\n              </> \r\n            )}\r\n            \r\n              </Droppable>\r\n      </DragDropContext>\r\n    )\r\n}\r\n\r\nexport default AddSelectOption\r\n","import React,{useEffect} from 'react'\r\nimport { useForm,useFieldArray } from \"react-hook-form\";\r\nimport {FormElemnts,FormGroup,InputWrap,EditLabel,} from '../../Styles'\r\nimport AddSelectOption from '../AddSelectOption';\r\n\r\nfunction EditFormValue({selectData,name,index,data,setData,onChangeHandeler,setSelectData}) {\r\n    const {register,getValues, setValue,control} = useForm({mode: 'onChange',  defaultValues:data})\r\n     const { fields } = useFieldArray({\r\n    control, // control props comes from useForm (optional: if you are using FormContext)\r\n    name: \"values\", // unique name for your Field Array\r\n    // keyName: \"id\", default to \"id\", you can change the key name\r\n  })\r\n    // useEffect(()=>{\r\n    //    let value = watch()\r\n    //    console.log(value)\r\n    //    if(value.subtype){\r\n    //        let nV = {...value,subtype:value.subtype.value}\r\n    //        setData(nV)\r\n    //    }else{\r\n    //        setData(value)\r\n    //    }\r\n    // },[])\r\n\r\n    const handleChange=(data)=>{\r\n        let value = getValues()\r\n        console.log(value)\r\n        setValue('subtype',data.value)\r\n        let nV = {...value,subtype:data.value}\r\n        console.log(nV)\r\n        setData(nV)\r\n        onChangeHandeler(nV,index)\r\n    }\r\n    const onChange=()=>{\r\n       let value = getValues()\r\n      //  let arr = getValues('values')\r\n      //   console.log(getValues('values'))\r\n      // let garray = Object.entries(arr).map(v=>{\r\n      //   console.log(v)\r\n      //   return v[1]\r\n      // })\r\n      // console.log(garray)\r\n      // let values = {...value,values:[...arr]}\r\n       onChangeHandeler(value,index)\r\n      setData(data)\r\n    }\r\n    // useEffect(() => {\r\n    //   let value = getValues()\r\n    //   let data = {...value,values:selectData}\r\n    //   console.log(data)\r\n    //     onChangeHandeler(data,index)\r\n    // }, [selectData])\r\n        // console.log(getValues('values'))\r\n    return (\r\n        <FormElemnts>\r\n          <form onChange={onChange}>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'required'}>Required</EditLabel>\r\n                <InputWrap>\r\n                  <input type='checkbox' name={'required'} {...register('required')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={name}>Label</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={name} className={'inputItems'} {...register('label', { required: true })}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'description'}>Help Text</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'description'} className={'inputItems'} {...register('description')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'placeholder'}>placeholder</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'placeholder'} className={'inputItems'} {...register('placeholder')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'className'}>Class</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'className'}placeholder=\"use space for separeted class name\"  className={'inputItems'} {...register('className')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'name'}>Name</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'name'} className={'inputItems'} {...register('name')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'values'}>Options</EditLabel>\r\n                <InputWrap>\r\n                  <AddSelectOption selectData={selectData} setValue={setValue} data={data} index={index} register={register} onChangeHandeler={onChangeHandeler} setSelectData={setSelectData} />\r\n                </InputWrap>\r\n            </FormGroup>\r\n          </form>\r\n        </FormElemnts>\r\n    )\r\n}\r\n\r\nexport default EditFormValue\r\n","import React, { useEffect, useState } from 'react'\r\nimport {TypesContainer,FieldActions,Label, ActionBtn} from '../../Styles'\r\nimport { AiOutlineEdit,AiOutlineDelete,AiOutlineCopy,AiFillQuestionCircle } from \"react-icons/ai\";\r\nimport EditFormValue from './EditFormValue';\r\nimport Select from 'react-select'\r\nimport { FormHelperText,Tooltip } from '@material-ui/core';\r\n\r\nimport StateContext from '../../../context/StateContext';\r\nconst selectDataE =[\r\n  {value:'option1',label:'Option1'},\r\n  {value:'option2',label:'option2'},\r\n  {value:'option3',label:'option3'},\r\n]\r\n\r\nconst Autocomplete  =({type,name,index})=> {\r\n    const [data,setData] = useState(null)\r\n    const [selectedData,setSelectedData] = useState(selectDataE[0])\r\n    const [selectData,setSelectData] = useState(null)\r\n    useEffect(()=>{\r\n        setSelectData(type.values)\r\n    },[])\r\n    useEffect(()=>{\r\n        setSelectData(type.values)\r\n    },[type])\r\n\r\n    const [editIsOpen,setEditOpen] = useState(false)\r\n    const handleChange=(data)=>{\r\n      setSelectedData(data)\r\n    }\r\n    useEffect(()=>{\r\n      setData(type)\r\n    },[type])\r\n    useEffect(()=>{\r\n      setData(type)\r\n    },[]) \r\n    return (\r\n        <StateContext.Consumer>\r\n          {({handleRemoveClick,onChangeHandler,handleCopyClick})=>{\r\n            return(<TypesContainer>\r\n                <FieldActions >\r\n                <ActionBtn onClick={()=>handleRemoveClick(index)} hoverBg={'#c66865'} del={true}><AiOutlineDelete/></ActionBtn>\r\n                <ActionBtn hoverBg={'#65aac6'} onClick={()=>setEditOpen(!editIsOpen)}><AiOutlineEdit/></ActionBtn>\r\n                <ActionBtn hoverBg={'#6fc665'} onClick={()=>handleCopyClick(index,data)}><AiOutlineCopy/></ActionBtn>\r\n                </FieldActions>\r\n                {editIsOpen && <Label htmlFor={name} >{data.label} \r\n                {data.required ? <span style={{color:'red',marginLeft:'5px',fontSize:'16px'}}>*</span> : null}\r\n                {data.description ? \r\n                <Tooltip title={data.description}>\r\n                  <span style={{marginLeft:'5px',fontSize:'16px'}}><AiFillQuestionCircle/></span>\r\n                </Tooltip> : null}\r\n                </Label>}\r\n                \r\n                {!editIsOpen && data &&\r\n                <>\r\n                <Label htmlFor={name} >{data.label} \r\n                {data.required ? <span style={{color:'red',marginLeft:'5px',fontSize:'16px'}}>*</span> : null}\r\n                {data.description ? \r\n                <Tooltip title={data.description}>\r\n                  <span style={{marginLeft:'5px',fontSize:'16px'}}><AiFillQuestionCircle/></span>\r\n                </Tooltip> : null}\r\n                </Label>\r\n                \r\n                  <Select \r\n                    className={\"basic-single \" + data.className}\r\n                    classNamePrefix=\"select\"\r\n                    defaultValue={selectedData}\r\n                    isSearchable={true}\r\n                    options={selectData}\r\n                    onChange={handleChange}\r\n                    placeholder={data.placeholder}\r\n                    />\r\n                    <FormHelperText>{data.description}</FormHelperText>\r\n                   </> \r\n                }\r\n                <div style={{display:'block'}}>\r\n                  {editIsOpen && <EditFormValue selectData={selectData} setSelectData={setSelectData} setData={setData} onChangeHandeler={onChangeHandler} index={index} data={data} name={name}/>}\r\n                </div>\r\n                </TypesContainer>)\r\n          }}\r\n            </StateContext.Consumer>\r\n          )\r\n\r\n}\r\n\r\nexport default  Autocomplete\r\n","import React from 'react'\r\nimport { useForm, } from \"react-hook-form\";\r\nimport {FormElemnts,FormGroup,InputWrap,EditLabel} from '../../Styles'\r\nimport Select from 'react-select'\r\nconst customStyles = {\r\n  container: (provided, state) => ({\r\n    ...provided,\r\n    width: '100%',\r\n  }),\r\n}\r\nconst btns =['default','danger','warning','info','primary','success']\r\nconst buttons = btns.map(v=>{\r\n  return {\r\n    value:v,\r\n    label:v.toUpperCase()\r\n  }\r\n})\r\nfunction EditFormValue({name,index,data,setData,onChangeHandeler}) {\r\n    const {register,getValues, setValue} = useForm({mode: 'onChange',  defaultValues:data})\r\n    // useEffect(()=>{\r\n    //    let value = watch()\r\n    //    console.log(value)\r\n    //    if(value.subtype){\r\n    //        let nV = {...value,subtype:value.subtype.value}\r\n    //        setData(nV)\r\n    //    }else{\r\n    //        setData(value)\r\n    //    }\r\n    // },[])\r\n    const handleChange=(data)=>{\r\n        let value = getValues()\r\n        setValue('style',data.value)\r\n        setValue('className','btn-'+data.value+' btn')\r\n        let nV = {...value,style:data.value,className:'btn-'+data.value+' btn'}\r\n        console.log(nV)\r\n        setData(nV)\r\n        onChangeHandeler(nV,index)\r\n    }\r\n    const onChange=()=>{\r\n       let value = getValues()\r\n       console.log(value)\r\n       if(value.subtype && value.subtype.value){\r\n           let nV = {...value,subtype:value.subtype.value}\r\n           setData(nV)\r\n        onChangeHandeler(nV,index)\r\n\r\n       }else{\r\n           setData(value)\r\n        onChangeHandeler(value,index)\r\n\r\n       }\r\n    }\r\n    return (\r\n        <FormElemnts>\r\n        <form onChange={onChange}>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={name}>Label</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={name} className={'inputItems'} {...register('label', { required: true })}/>\r\n                </InputWrap>\r\n                    \r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'style'}>Style</EditLabel>\r\n                <InputWrap>\r\n                  <Select \r\n                className=\"basic-single\"\r\n                classNamePrefix=\"select\"\r\n                defaultValue={{value:data.style,label:data.style.toUpperCase()}}\r\n                isSearchable={false}\r\n                name=\"color\"\r\n                options={buttons}\r\n                styles={customStyles}\r\n                onChange={handleChange}\r\n                />\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'className'}>class</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' placeholder=\"use space for separeted class name\" name={'className'} className={'inputItems'} {...register('className')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'name'}>Name</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'name'} className={'inputItems'} {...register('name')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'value'}>Value</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text'  placeholder='Value' name={'value'} className={'inputItems'} {...register('value')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            </form>\r\n        </FormElemnts>\r\n    )\r\n}\r\n\r\nexport default EditFormValue\r\n","import React, { useEffect, useState } from 'react'\r\nimport {TypesContainer,FieldActions,Label, ActionBtn} from '../../Styles'\r\nimport { AiOutlineEdit,AiOutlineDelete,AiOutlineCopy } from \"react-icons/ai\";\r\nimport EditFormValue from './EditFormValue';\r\nimport StateContext from '../../../context/StateContext';\r\n\r\nconst Button  =({type,name,index})=> {\r\n    const [data,setData] = useState(null)\r\n    const [editIsOpen,setEditOpen] = useState(false)\r\n    useEffect(()=>{\r\n      setData(type)\r\n    },[type])\r\n    useEffect(()=>{\r\n      setData(type)\r\n    },[])\r\n    return (\r\n        <StateContext.Consumer>\r\n          {({handleRemoveClick,onChangeHandler,handleCopyClick})=>{\r\n            return(<TypesContainer>\r\n                <FieldActions >\r\n                <ActionBtn onClick={()=>handleRemoveClick(index)} hoverBg={'#c66865'} del={true}><AiOutlineDelete/></ActionBtn>\r\n                <ActionBtn hoverBg={'#65aac6'} onClick={()=>setEditOpen(!editIsOpen)}><AiOutlineEdit/></ActionBtn>\r\n                <ActionBtn hoverBg={'#6fc665'} onClick={()=>handleCopyClick(index,data)}><AiOutlineCopy/></ActionBtn>\r\n                </FieldActions>\r\n                {editIsOpen && <Label htmlFor={name} >{data.label}</Label>}\r\n                {!editIsOpen && data &&<button className={'render-btn ' + data.className}>{data.label}</button>}\r\n                <div style={{display:'block'}}>\r\n                  {editIsOpen && <EditFormValue  setData={setData} onChangeHandeler={onChangeHandler} index={index} data={data} name={name}/>}\r\n                </div>\r\n                </TypesContainer>)\r\n          }}\r\n            </StateContext.Consumer>\r\n          )\r\n\r\n}\r\n\r\nexport default  Button\r\n","import React,{useEffect} from 'react'\r\nimport { useForm,useFieldArray } from \"react-hook-form\";\r\nimport {FormElemnts,FormGroup,InputWrap,EditLabel,} from '../../Styles'\r\nimport AddSelectOption from '../AddSelectOption';\r\n\r\nfunction EditFormValue({selectData,name,index,data,setData,onChangeHandeler,setSelectData}) {\r\n    const {register,getValues, setValue,control} = useForm({mode: 'onChange',  defaultValues:data})\r\n     const { fields } = useFieldArray({\r\n    control, // control props comes from useForm (optional: if you are using FormContext)\r\n    name: \"values\", // unique name for your Field Array\r\n    // keyName: \"id\", default to \"id\", you can change the key name\r\n  })\r\n    // useEffect(()=>{\r\n    //    let value = watch()\r\n    //    console.log(value)\r\n    //    if(value.subtype){\r\n    //        let nV = {...value,subtype:value.subtype.value}\r\n    //        setData(nV)\r\n    //    }else{\r\n    //        setData(value)\r\n    //    }\r\n    // },[])\r\n\r\n    const handleChange=(data)=>{\r\n        let value = getValues()\r\n        console.log(value)\r\n        setValue('subtype',data.value)\r\n        let nV = {...value,subtype:data.value}\r\n        console.log(nV)\r\n        setData(nV)\r\n        onChangeHandeler(nV,index)\r\n    }\r\n    const onChange=()=>{\r\n       let value = getValues()\r\n      //  let arr = getValues('values')\r\n      //   console.log(getValues('values'))\r\n      // let garray = Object.entries(arr).map(v=>{\r\n      //   console.log(v)\r\n      //   return v[1]\r\n      // })\r\n      // console.log(garray)\r\n      // let values = {...value,values:[...arr]}\r\n       onChangeHandeler(value,index)\r\n      setData(data)\r\n    }\r\n    // useEffect(() => {\r\n    //   let value = getValues()\r\n    //   let data = {...value,values:selectData}\r\n    //   console.log(data)\r\n    //     onChangeHandeler(data,index)\r\n    // }, [selectData])\r\n        // console.log(getValues('values'))\r\n    return (\r\n        <FormElemnts>\r\n          <form onChange={onChange}>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'required'}>Required</EditLabel>\r\n                <InputWrap>\r\n                  <input type='checkbox' name={'required'} {...register('required')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={name}>Label</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={name} className={'inputItems'} {...register('label', { required: true })}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'description'}>Help Text</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'description'} className={'inputItems'} {...register('description')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'toggle'}>Toggle</EditLabel>\r\n                  <InputWrap>\r\n                  <input type='checkbox' name={'toggle'} {...register('toggle')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'inline'}>Inline</EditLabel>\r\n                  <InputWrap>\r\n                  <input type='checkbox' name={'inline'} {...register('inline')}/> Display checkbox inline\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'className'}>Class</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'className'} placeholder=\"use space for separeted class name\" className={'inputItems'} {...register('className')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            \r\n            <FormGroup>\r\n                <EditLabel htmlFor={'name'}>Name</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'name'} className={'inputItems'} {...register('name')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n             <FormGroup>\r\n                <EditLabel htmlFor={'other'}>other</EditLabel>\r\n                  <InputWrap>\r\n                  <input type='checkbox' name={'other'} {...register('other')}/> Let users enter an unlisted option\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'values'}>Options</EditLabel>\r\n                <InputWrap>\r\n                  <AddSelectOption selectData={selectData} setValue={setValue} data={data} index={index} register={register} onChangeHandeler={onChangeHandeler} setSelectData={setSelectData} />\r\n                </InputWrap>\r\n            </FormGroup>\r\n          </form>\r\n        </FormElemnts>\r\n    )\r\n}\r\n\r\nexport default EditFormValue\r\n","import React, { useEffect, useState } from 'react'\r\nimport {TypesContainer,FieldActions,Label, ActionBtn} from '../../Styles'\r\nimport { AiOutlineEdit,AiOutlineDelete,AiOutlineCopy,AiFillQuestionCircle } from \"react-icons/ai\";\r\nimport EditFormValue from './EditFormValue';\r\nimport { FormHelperText,Tooltip } from '@material-ui/core';\r\nimport StateContext from '../../../context/StateContext';\r\nimport Toggle from 'react-toggle'\r\nimport \"react-toggle/style.css\"\r\n\r\nconst CheckBoxs = ({data,toggle,classNames}) => {\r\n    return (\r\n      <>\r\n      {toggle?\r\n      <label style={{display:'flex'}}>\r\n      <Toggle\r\n        defaultChecked={data.selected}\r\n        />\r\n      <span style={{marginLeft:'20px'}}>{data.value.toUpperCase()}</span>\r\n      </label>\r\n      :\r\n      <>\r\n       <input type=\"checkbox\" value={data.value} defaultChecked={data.selected} className={classNames}/> {data.value.toUpperCase()}\r\n        \r\n      </>}\r\n       </>\r\n    )\r\n}\r\nconst Checkbox  =({type,name,index})=> {\r\n    const [data,setData] = useState(null)\r\n    const [showOther,setShowOther] = useState(false)\r\n    const [selectData,setSelectData] = useState(null)\r\n    useEffect(()=>{\r\n        setSelectData(type.values)\r\n    },[])\r\n    useEffect(()=>{\r\n        setSelectData(type.values)\r\n    },[type])\r\n\r\n    const [editIsOpen,setEditOpen] = useState(false)\r\n    useEffect(()=>{\r\n      setData(type)\r\n    },[type])\r\n    useEffect(()=>{\r\n      setData(type)\r\n    },[]) \r\n    const handleChange=(e)=>{\r\n      setShowOther(e.target.checked)\r\n    }\r\n    return (\r\n        <StateContext.Consumer>\r\n          {({handleRemoveClick,onChangeHandler,handleCopyClick})=>{\r\n            return(<TypesContainer>\r\n                <FieldActions >\r\n                <ActionBtn onClick={()=>handleRemoveClick(index)} hoverBg={'#c66865'} del={true}><AiOutlineDelete/></ActionBtn>\r\n                <ActionBtn hoverBg={'#65aac6'} onClick={()=>setEditOpen(!editIsOpen)}><AiOutlineEdit/></ActionBtn>\r\n                <ActionBtn hoverBg={'#6fc665'} onClick={()=>handleCopyClick(index,data)}><AiOutlineCopy/></ActionBtn>\r\n                </FieldActions>\r\n                {editIsOpen && <Label htmlFor={name} >{data.label} \r\n                {data.required ? <span style={{color:'red',marginLeft:'5px',fontSize:'16px'}}>*</span> : null}\r\n                {data.description ? \r\n                <Tooltip title={data.description}>\r\n                  <span style={{marginLeft:'5px',fontSize:'16px'}}><AiFillQuestionCircle/></span>\r\n                </Tooltip> : null}\r\n                </Label>}\r\n                \r\n                {!editIsOpen && data &&\r\n                <>\r\n                <Label htmlFor={name} >{data.label} \r\n                {data.required ? <span style={{color:'red',marginLeft:'5px',fontSize:'16px'}}>*</span> : null}\r\n                {data.description ? \r\n                <Tooltip title={data.description}>\r\n                  <span style={{marginLeft:'5px',fontSize:'16px'}}><AiFillQuestionCircle/></span>\r\n                </Tooltip> : null}\r\n                </Label>\r\n                <div >\r\n                  {selectData.map((v,k)=>{\r\n                    return(\r\n                    <div key={k} style={{display: data.inline ? 'inline-block' : 'block'}}>\r\n                      <CheckBoxs data={v}  toggle={data.toggle} classNames={data.className}/>\r\n                    </div> )\r\n                  })}\r\n                {data.other &&   <div style={{display: data.inline ? 'inline-block' : 'block'}}  >\r\n                  {data.toggle ?\r\n                    (\r\n                       <label style={{display:'flex'}}>\r\n                          <Toggle\r\n                            defaultChecked={false}\r\n                            onChange={handleChange}\r\n                            />\r\n                          <span style={{marginLeft:'20px'}}>Other {showOther&& <input type='text'/>}</span>\r\n                          \r\n                          </label>\r\n                        ):\r\n                  (<>\r\n                  <input type=\"checkbox\" onChange={handleChange} className={data.className}/> Other {showOther&& <input type='text'/>}\r\n                  </>)}\r\n                  </div>}\r\n                  \r\n                  </div>\r\n                <FormHelperText>{data.description}</FormHelperText>\r\n                </>\r\n                }\r\n                \r\n                <div style={{display:'block'}}>\r\n                  {editIsOpen && <EditFormValue selectData={selectData} setSelectData={setSelectData} setData={setData} onChangeHandeler={onChangeHandler} index={index} data={data} name={name}/>}\r\n                </div>\r\n                </TypesContainer>)\r\n          }}\r\n            </StateContext.Consumer>\r\n          )\r\n\r\n}\r\n\r\nexport default  Checkbox\r\n","import React , {useEffect,useState} from 'react'\r\nimport { useForm, } from \"react-hook-form\";\r\nimport {FormElemnts,FormGroup,InputWrap,EditLabel} from '../../Styles'\r\nimport Select from 'react-select'\r\nconst customStyles = {\r\n  container: (provided, state) => ({\r\n    ...provided,\r\n    width: '100%',\r\n  }),\r\n}\r\n\r\nfunction EditFormValue({name,index,data,setData,onChangeHandeler}) {\r\n    const {register,getValues, setValue} = useForm({mode: 'onChange',  defaultValues:data})\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    useEffect(()=>{\r\n       setValue('name',`date-${startDate.toLocaleString().split(',')[0]}`)\r\n    },[])\r\n    const handleChange=(data)=>{\r\n        let value = getValues()\r\n        setValue('style',data.value)\r\n        setValue('className','btn-'+data.value+' btn')\r\n        let nV = {...value,style:data.value,className:'btn-'+data.value+' btn'}\r\n        console.log(nV)\r\n        setData(nV)\r\n        onChangeHandeler(nV,index)\r\n    }\r\n    const onChange=()=>{\r\n       let value = getValues()\r\n       console.log(value)\r\n       if(value.subtype && value.subtype.value){\r\n           let nV = {...value,subtype:value.subtype.value}\r\n           setData(nV)\r\n        onChangeHandeler(nV,index)\r\n\r\n       }else{\r\n           setData(value)\r\n        onChangeHandeler(value,index)\r\n\r\n       }\r\n    }\r\n    return (\r\n        <FormElemnts>\r\n        <form onChange={onChange}>\r\n        <FormGroup>\r\n                <EditLabel htmlFor={'required'}>Required</EditLabel>\r\n                <InputWrap>\r\n                  <input type='checkbox' name={'required'} {...register('required')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={name}>Label</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={name} className={'inputItems'} {...register('label', { required: true })}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n             <FormGroup>\r\n                <EditLabel htmlFor={'description'}>Help Text</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'description'} className={'inputItems'} {...register('description')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'placeholder'}>placeholder</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'placeholder'} className={'inputItems'} {...register('placeholder')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'className'}>class</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'className'} placeholder=\"use space for separeted class name\" className={'inputItems'} {...register('className')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'name'}>Name</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'name'} className={'inputItems'} {...register('name')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'value'}>Value</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'value'}  placeholder='Value' className={'inputItems'} {...register('value')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            </form>\r\n        </FormElemnts>\r\n    )\r\n}\r\n\r\nexport default EditFormValue\r\n","import React, { useEffect, useState } from 'react'\r\nimport {TypesContainer,FieldActions,Label, ActionBtn} from '../../Styles'\r\nimport { AiOutlineEdit,AiOutlineDelete,AiOutlineCopy,AiFillQuestionCircle } from \"react-icons/ai\";\r\nimport EditFormValue from './EditFormValue';\r\nimport StateContext from '../../../context/StateContext';\r\nimport { FormHelperText,Tooltip } from '@material-ui/core';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nconst Datefield  =({type,name,index})=> {\r\n    const [data,setData] = useState(null)\r\n    const [editIsOpen,setEditOpen] = useState(false)\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    useEffect(()=>{\r\n      setData(type)\r\n    },[type])\r\n    useEffect(()=>{\r\n      setData(type)\r\n    },[])\r\n    return (\r\n        <StateContext.Consumer>\r\n          {({handleRemoveClick,onChangeHandler,handleCopyClick})=>{\r\n            return(<TypesContainer>\r\n                <FieldActions >\r\n                <ActionBtn onClick={()=>handleRemoveClick(index)} hoverBg={'#c66865'} del={true}><AiOutlineDelete/></ActionBtn>\r\n                <ActionBtn hoverBg={'#65aac6'} onClick={()=>setEditOpen(!editIsOpen)}><AiOutlineEdit/></ActionBtn>\r\n                <ActionBtn hoverBg={'#6fc665'} onClick={()=>handleCopyClick(index,data)}><AiOutlineCopy/></ActionBtn>\r\n                </FieldActions>\r\n                {data && <Label htmlFor={name} >{data.label} \r\n                {data.required ? <span style={{color:'red',marginLeft:'5px',fontSize:'16px'}}>*</span> : null}\r\n                {data.description ? \r\n                <Tooltip title={data.description}>\r\n                  <span style={{marginLeft:'5px',fontSize:'16px'}}><AiFillQuestionCircle/></span>\r\n                </Tooltip> : null}\r\n                </Label>}\r\n                <br/>\r\n                {!editIsOpen && data &&<DatePicker className={data.className} placeholderText={data.placeholder} selected={startDate} onChange={(date) => setStartDate(date)} />}\r\n                {data !== null && <FormHelperText>{data.description}</FormHelperText>}\r\n                <div style={{display:'block'}}>\r\n                  {editIsOpen && <EditFormValue  setData={setData} onChangeHandeler={onChangeHandler} index={index} data={data} name={name}/>}\r\n                </div>\r\n                </TypesContainer>)\r\n          }}\r\n            </StateContext.Consumer>\r\n          )\r\n\r\n}\r\n\r\nexport default  Datefield\r\n","import React from 'react'\r\nimport { useForm, } from \"react-hook-form\";\r\nimport {FormElemnts,FormGroup,InputWrap,EditLabel} from '../../Styles'\r\nimport Select from 'react-select'\r\nconst customStyles = {\r\n  container: (provided, state) => ({\r\n    ...provided,\r\n    width: '100%',\r\n  }),\r\n}\r\nfunction EditFormValue({name,index,data,setData,onChangeHandeler}) {\r\n    const {register,getValues, setValue} = useForm({mode: 'onChange',  defaultValues:data})\r\n    // useEffect(()=>{\r\n    //    let value = watch()\r\n    //    console.log(value)\r\n    //    if(value.subtype){\r\n    //        let nV = {...value,subtype:value.subtype.value}\r\n    //        setData(nV)\r\n    //    }else{\r\n    //        setData(value)\r\n    //    }\r\n    // },[])\r\n    const handleChange=(data)=>{\r\n        let value = getValues()\r\n        setValue('subtype',data.value)\r\n        let nV = {...value,subtype:data.value}\r\n        console.log(nV)\r\n        setData(nV)\r\n        onChangeHandeler(nV,index)\r\n    }\r\n    const onChange=()=>{\r\n       let value = getValues()\r\n       console.log(value)\r\n       if(value.subtype && value.subtype.value){\r\n           let nV = {...value,subtype:value.subtype.value}\r\n           setData(nV)\r\n        onChangeHandeler(nV,index)\r\n\r\n       }else{\r\n           setData(value)\r\n        onChangeHandeler(value,index)\r\n\r\n       }\r\n    }\r\n    return (\r\n        <FormElemnts>\r\n        <form onChange={onChange}>\r\n        <FormGroup>\r\n                <EditLabel htmlFor={'required'}>Required</EditLabel>\r\n                <InputWrap>\r\n                  <input type='checkbox' name={'required'} {...register('required')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={name}>Label</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={name} className={'inputItems'} {...register('label', { required: true })}/>\r\n                </InputWrap>\r\n                    \r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'description'}>Help Text</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'description'} className={'inputItems'} {...register('description')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'className'}>class</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'className'} placeholder=\"use space for separeted class name\" className={'inputItems'} {...register('className')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'name'}>Name</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'name'} className={'inputItems'} {...register('name')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            {/* <FormGroup>\r\n                <EditLabel htmlFor={'subtype'}>subtype</EditLabel>\r\n                <InputWrap>\r\n                  <Select \r\n                className=\"basic-single\"\r\n                classNamePrefix=\"select\"\r\n                defaultValue={{value:'fileupload',label:'File Upload'}}\r\n                isSearchable={false}\r\n                name=\"color\"\r\n                options={[{value:'fileupload',label:'File Upload'},{value:'fineuploader',label:'Fine Uploader'}]}\r\n                styles={customStyles}\r\n                onChange={handleChange}\r\n                />\r\n                </InputWrap>\r\n            </FormGroup> */}\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'multiple'}>multiple</EditLabel>\r\n                  <InputWrap>\r\n                  <input type='checkbox' name={'multiple'} {...register('multiple')}/> Allow users to upload multiple files\r\n                </InputWrap>\r\n            </FormGroup>\r\n            </form>\r\n        </FormElemnts>\r\n    )\r\n}\r\n\r\nexport default EditFormValue\r\n","import React, { useEffect, useState } from 'react'\r\nimport {TypesContainer,FieldActions,Label, ActionBtn} from '../../Styles'\r\nimport { AiOutlineEdit,AiOutlineDelete,AiOutlineCopy,AiFillQuestionCircle} from \"react-icons/ai\";\r\nimport EditFormValue from './EditFormValue';\r\nimport StateContext from '../../../context/StateContext';\r\nimport { FormHelperText,Tooltip } from '@material-ui/core';\r\n\r\nconst File  =({type,name,index})=> {\r\n    const [data,setData] = useState(null)\r\n    const [editIsOpen,setEditOpen] = useState(false)\r\n    useEffect(()=>{\r\n      setData(type)\r\n    },[type])\r\n    useEffect(()=>{\r\n      setData(type)\r\n    },[])\r\n    return (\r\n        <StateContext.Consumer>\r\n          {({handleRemoveClick,onChangeHandler,handleCopyClick})=>{\r\n            return(<TypesContainer>\r\n                <FieldActions >\r\n                <ActionBtn onClick={()=>handleRemoveClick(index)} hoverBg={'#c66865'} del={true}><AiOutlineDelete/></ActionBtn>\r\n                <ActionBtn hoverBg={'#65aac6'} onClick={()=>setEditOpen(!editIsOpen)}><AiOutlineEdit/></ActionBtn>\r\n                <ActionBtn hoverBg={'#6fc665'} onClick={()=>handleCopyClick(index,data)}><AiOutlineCopy/></ActionBtn>\r\n                </FieldActions>\r\n               {data !== null &&<Label>{data.label} \r\n                {data.required ? <span style={{color:'red',marginLeft:'5px',fontSize:'16px'}}>*</span> : null}\r\n                {data.description ? \r\n                <Tooltip title={data.description}>\r\n                  <span style={{marginLeft:'5px',fontSize:'16px'}}><AiFillQuestionCircle/></span>\r\n                </Tooltip> : null}\r\n                </Label>}\r\n                <br/>\r\n                {!editIsOpen && data &&<input type='file' multiple={data.multiple} className={data.className}/>}\r\n                {data !== null && <FormHelperText>{data.description}</FormHelperText>}\r\n                <div style={{display:'block'}}>\r\n                  {editIsOpen && <EditFormValue  setData={setData} onChangeHandeler={onChangeHandler} index={index} data={data} name={name}/>}\r\n                </div>\r\n                </TypesContainer>)\r\n          }}\r\n            </StateContext.Consumer>\r\n          )\r\n\r\n}\r\n\r\nexport default  File\r\n","import React from 'react'\r\nimport { useForm, } from \"react-hook-form\";\r\nimport {FormElemnts,FormGroup,InputWrap,EditLabel} from '../../Styles'\r\nimport Select from 'react-select'\r\nconst customStyles = {\r\n  container: (provided, state) => ({\r\n    ...provided,\r\n    width: '100%',\r\n  }),\r\n}\r\nconst typess =['p','address','blockquote','canvas','output',]\r\nconst types = typess.map(v=>{\r\n  return {\r\n    value:v,\r\n    label:v.toUpperCase()\r\n  }\r\n})\r\nfunction EditFormValue({name,index,data,setData,onChangeHandeler}) {\r\n    const {register,getValues, setValue} = useForm({mode: 'onChange',  defaultValues:data})\r\n    // useEffect(()=>{\r\n    //    let value = watch()\r\n    //    console.log(value)\r\n    //    if(value.subtype){\r\n    //        let nV = {...value,subtype:value.subtype.value}\r\n    //        setData(nV)\r\n    //    }else{\r\n    //        setData(value)\r\n    //    }\r\n    // },[])\r\n    const handleChange=(data)=>{\r\n        let value = getValues()\r\n        console.log(value)\r\n        setValue('subtype',data.value)\r\n        let nV = {...value,subtype:data.value}\r\n        console.log(nV)\r\n        setData(nV)\r\n        onChangeHandeler(nV,index)\r\n    }\r\n    const onChange=()=>{\r\n       let value = getValues()\r\n       console.log(value)\r\n       if(value.subtype && value.subtype.value){\r\n           let nV = {...value,subtype:value.subtype.value}\r\n           setData(nV)\r\n        onChangeHandeler(nV,index)\r\n\r\n       }else{\r\n           setData(value)\r\n        onChangeHandeler(value,index)\r\n\r\n       }\r\n    }\r\n    return (\r\n        <FormElemnts>\r\n        <form onChange={onChange}>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={name}>Content</EditLabel>\r\n                <InputWrap>\r\n                  <textarea name={name} className={'inputItems'} style={{minHeight: '150px'}} {...register('label', { required: true })}/>\r\n                </InputWrap>\r\n                    \r\n            </FormGroup>\r\n            <FormGroup>\r\n              <EditLabel>Types</EditLabel>\r\n              <InputWrap>\r\n               {/* <Controller\r\n                name=\"subtype\"\r\n                control={control}\r\n                render={({ field }) => <Select \r\n                 {...field} \r\n                className=\"basic-single\"\r\n                classNamePrefix=\"select\"\r\n                defaultValue={{value:data.subtype,label:data.subtype.toUpperCase()}}\r\n                isSearchable={false}\r\n                name=\"color\"\r\n                options={selectData}\r\n                styles={customStyles}\r\n                />}\r\n      /> */}\r\n             <Select \r\n                className=\"basic-single\"\r\n                classNamePrefix=\"select\"\r\n                defaultValue={{value:data.subtype,label:data.subtype.toUpperCase()}}\r\n                isSearchable={false}\r\n                name=\"color\"\r\n                options={types}\r\n                styles={customStyles}\r\n                onChange={handleChange}\r\n                />\r\n              \r\n                </InputWrap> \r\n              \r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'className'}>class</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'className'} className={'inputItems'} {...register('className')} placeholder=\"use space for separeted class name\"/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            </form>\r\n        </FormElemnts>\r\n    )\r\n}\r\n\r\nexport default EditFormValue\r\n","import React, { useEffect, useState } from 'react'\r\nimport {TypesContainer,FieldActions,Label, ActionBtn} from '../../Styles'\r\nimport { AiOutlineEdit,AiOutlineDelete,AiOutlineCopy } from \"react-icons/ai\";\r\nimport EditFormValue from './EditFormValue';\r\nimport StateContext from '../../../context/StateContext';\r\nconst Paragraph  =({type,name,index})=> {\r\n    const [data,setData] = useState(null)\r\n    const [editIsOpen,setEditOpen] = useState(false)\r\n    useEffect(()=>{\r\n      setData(type)\r\n    },[type])\r\n    useEffect(()=>{\r\n      setData(type)\r\n    },[])\r\n    return (\r\n        <StateContext.Consumer>\r\n          {({handleRemoveClick,onChangeHandler,handleCopyClick})=>{\r\n            return(<TypesContainer>\r\n                <FieldActions >\r\n                <ActionBtn onClick={()=>handleRemoveClick(index)} hoverBg={'#c66865'} del={true}><AiOutlineDelete/></ActionBtn>\r\n                <ActionBtn hoverBg={'#65aac6'} onClick={()=>setEditOpen(!editIsOpen)}><AiOutlineEdit/></ActionBtn>\r\n                <ActionBtn hoverBg={'#6fc665'} onClick={()=>handleCopyClick(index,data)}><AiOutlineCopy/></ActionBtn>\r\n                </FieldActions>\r\n                {editIsOpen && <Label htmlFor={name} >{data.label}</Label>}\r\n                {!editIsOpen && data &&<data.subtype className={data.className}>{data.label}</data.subtype>}\r\n                <div style={{display:'block'}}>\r\n                  {editIsOpen && <EditFormValue setData={setData} onChangeHandeler={onChangeHandler} index={index} data={data} name={name}/>}\r\n                </div>\r\n                </TypesContainer>)\r\n          }}\r\n            </StateContext.Consumer>\r\n          )\r\n\r\n}\r\n\r\nexport default  Paragraph\r\n","import React,{useEffect} from 'react'\r\nimport { useForm,useFieldArray } from \"react-hook-form\";\r\nimport {FormElemnts,FormGroup,InputWrap,EditLabel,} from '../../Styles'\r\nimport AddSelectOption from '../AddSelectOption';\r\n\r\nfunction EditFormValue({selectData,name,index,data,setData,onChangeHandeler,setSelectData}) {\r\n    const {register,getValues, setValue,control} = useForm({mode: 'onChange',  defaultValues:data})\r\n     const { fields } = useFieldArray({\r\n    control, // control props comes from useForm (optional: if you are using FormContext)\r\n    name: \"values\", // unique name for your Field Array\r\n    // keyName: \"id\", default to \"id\", you can change the key name\r\n  })\r\n    // useEffect(()=>{\r\n    //    let value = watch()\r\n    //    console.log(value)\r\n    //    if(value.subtype){\r\n    //        let nV = {...value,subtype:value.subtype.value}\r\n    //        setData(nV)\r\n    //    }else{\r\n    //        setData(value)\r\n    //    }\r\n    // },[])\r\n\r\n    const handleChange=(data)=>{\r\n        let value = getValues()\r\n        console.log(value)\r\n        setValue('subtype',data.value)\r\n        let nV = {...value,subtype:data.value}\r\n        console.log(nV)\r\n        setData(nV)\r\n        onChangeHandeler(nV,index)\r\n    }\r\n    const onChange=()=>{\r\n       let value = getValues()\r\n      //  let arr = getValues('values')\r\n      //   console.log(getValues('values'))\r\n      // let garray = Object.entries(arr).map(v=>{\r\n      //   console.log(v)\r\n      //   return v[1]\r\n      // })\r\n      // console.log(garray)\r\n      // let values = {...value,values:[...arr]}\r\n       onChangeHandeler(value,index)\r\n      setData(data)\r\n    }\r\n    // useEffect(() => {\r\n    //   let value = getValues()\r\n    //   let data = {...value,values:selectData}\r\n    //   console.log(data)\r\n    //     onChangeHandeler(data,index)\r\n    // }, [selectData])\r\n        // console.log(getValues('values'))\r\n    return (\r\n        <FormElemnts>\r\n          <form onChange={onChange}>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'required'}>Required</EditLabel>\r\n                <InputWrap>\r\n                  <input type='checkbox' name={'required'} {...register('required')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={name}>Label</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={name} className={'inputItems'} {...register('label', { required: true })}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'description'}>Help Text</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'description'} className={'inputItems'} {...register('description')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'inline'}>Inline</EditLabel>\r\n                  <InputWrap>\r\n                  <input type='checkbox' name={'inline'} {...register('inline')}/> Display checkbox inline\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'className'}>Class</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'className'} placeholder=\"use space for separeted class name\" className={'inputItems'} {...register('className')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            \r\n            <FormGroup>\r\n                <EditLabel htmlFor={'name'}>Name</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'name'} className={'inputItems'} {...register('name')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n             <FormGroup>\r\n                <EditLabel htmlFor={'other'}>other</EditLabel>\r\n                  <InputWrap>\r\n                  <input type='checkbox' name={'other'} {...register('other')}/> Let users enter an unlisted option\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'values'}>Options</EditLabel>\r\n                <InputWrap>\r\n                  <AddSelectOption selectData={selectData} setValue={setValue} data={data} index={index} register={register} onChangeHandeler={onChangeHandeler} setSelectData={setSelectData} />\r\n                </InputWrap>\r\n            </FormGroup>\r\n          </form>\r\n        </FormElemnts>\r\n    )\r\n}\r\n\r\nexport default EditFormValue\r\n","import React, { useEffect, useState } from 'react'\r\nimport {TypesContainer,FieldActions,Label, ActionBtn} from '../../Styles'\r\nimport { AiOutlineEdit,AiOutlineDelete,AiOutlineCopy,AiFillQuestionCircle } from \"react-icons/ai\";\r\nimport { FormHelperText,Tooltip } from '@material-ui/core';\r\nimport EditFormValue from './EditFormValue';\r\nimport Select from 'react-select'\r\nimport StateContext from '../../../context/StateContext';\r\nimport Toggle from 'react-toggle'\r\nimport \"react-toggle/style.css\"\r\n\r\nconst RadioGroup = ({data,toggle,name,classNames,check}) => {\r\n    return (\r\n\r\n      <>\r\n       <input type=\"radio\" className={classNames} defaultChecked={check===data.value}value={data.value} name={name} /> {data.value.toUpperCase()}\r\n      </>\r\n    )\r\n}\r\nconst Radio  =({type,name,index})=> {\r\n    const [data,setData] = useState(null)\r\n    const [selectData,setSelectData] = useState(null)\r\n    useEffect(()=>{\r\n        setSelectData(type.values)\r\n    },[])\r\n    useEffect(()=>{\r\n        setSelectData(type.values)\r\n    },[type])\r\n\r\n    const [editIsOpen,setEditOpen] = useState(false)\r\n    useEffect(()=>{\r\n      setData(type)\r\n    },[type])\r\n    useEffect(()=>{\r\n      setData(type)\r\n    },[]) \r\n    const [showOther,setShowOther] = useState(false)\r\n    const onChangeValue=(event) =>{\r\n    console.log(event.target.value);\r\n    setShowOther(event.target.value === 'other')\r\n  }\r\n    return (\r\n        <StateContext.Consumer>\r\n          {({handleRemoveClick,onChangeHandler,handleCopyClick})=>{\r\n            return(<TypesContainer>\r\n                <FieldActions >\r\n                <ActionBtn onClick={()=>handleRemoveClick(index)} hoverBg={'#c66865'} del={true}><AiOutlineDelete/></ActionBtn>\r\n                <ActionBtn hoverBg={'#65aac6'} onClick={()=>setEditOpen(!editIsOpen)}><AiOutlineEdit/></ActionBtn>\r\n                <ActionBtn hoverBg={'#6fc665'} onClick={()=>handleCopyClick(index,data)}><AiOutlineCopy/></ActionBtn>\r\n                </FieldActions>\r\n                {editIsOpen && <Label htmlFor={name} >{data.label}</Label>}\r\n                \r\n                {!editIsOpen && data &&\r\n                <>\r\n                <Label>{data.label} \r\n                {data.required ? <span style={{color:'red',marginLeft:'5px',fontSize:'16px'}}>*</span> : null}\r\n                {data.description ? \r\n                <Tooltip title={data.description}>\r\n                  <span style={{marginLeft:'5px',fontSize:'16px'}}><AiFillQuestionCircle/></span>\r\n                </Tooltip> : null}\r\n                </Label>\r\n                <div onChange={onChangeValue}>\r\n                  {selectData.map((v,k)=>{\r\n                    return(\r\n                    <div key={k} style={{display: data.inline ? 'inline-block' : 'block'}}>\r\n                      <RadioGroup data={v} name={name}  toggle={data.toggle} check={data.radio || 'option-1'} classNames={data.className}/>\r\n                    </div> )\r\n                  })}\r\n                  {data.other && \r\n                  <div style={{display: data.inline ? 'inline-block' : 'block'}} >\r\n                  <input type=\"radio\" name={name} value='other' className={data.className}/> Other {showOther&& <input type='text'/>}\r\n                  </div>}\r\n                </div>\r\n                <FormHelperText>{data.description}</FormHelperText>\r\n                </>\r\n                }\r\n                \r\n                <div style={{display:'block'}}>\r\n                  {editIsOpen && <EditFormValue selectData={selectData} setSelectData={setSelectData} setData={setData} onChangeHandeler={onChangeHandler} index={index} data={data} name={name}/>}\r\n                </div>\r\n                </TypesContainer>)\r\n          }}\r\n            </StateContext.Consumer>\r\n          )\r\n\r\n}\r\n\r\nexport default  Radio\r\n","import React,{useEffect} from 'react'\r\nimport { useForm,useFieldArray } from \"react-hook-form\";\r\nimport {FormElemnts,FormGroup,InputWrap,EditLabel,} from '../../Styles'\r\nimport AddSelectOption from '../AddSelectOption';\r\n\r\nfunction EditFormValue({selectData,name,index,data,setData,onChangeHandeler,setSelectData}) {\r\n    const {register,getValues, setValue,control} = useForm({mode: 'onChange',  defaultValues:data})\r\n     const { fields } = useFieldArray({\r\n    control, // control props comes from useForm (optional: if you are using FormContext)\r\n    name: \"values\", // unique name for your Field Array\r\n    // keyName: \"id\", default to \"id\", you can change the key name\r\n  })\r\n    // useEffect(()=>{\r\n    //    let value = watch()\r\n    //    console.log(value)\r\n    //    if(value.subtype){\r\n    //        let nV = {...value,subtype:value.subtype.value}\r\n    //        setData(nV)\r\n    //    }else{\r\n    //        setData(value)\r\n    //    }\r\n    // },[])\r\n\r\n    const handleChange=(data)=>{\r\n        let value = getValues()\r\n        console.log(value)\r\n        setValue('subtype',data.value)\r\n        let nV = {...value,subtype:data.value}\r\n        console.log(nV)\r\n        setData(nV)\r\n        onChangeHandeler(nV,index)\r\n    }\r\n    const onChange=()=>{\r\n       let value = getValues()\r\n      //  let arr = getValues('values')\r\n      //   console.log(getValues('values'))\r\n      // let garray = Object.entries(arr).map(v=>{\r\n      //   console.log(v)\r\n      //   return v[1]\r\n      // })\r\n      // console.log(garray)\r\n      // let values = {...value,values:[...arr]}\r\n       onChangeHandeler(value,index)\r\n      setData(data)\r\n    }\r\n    // useEffect(() => {\r\n    //   let value = getValues()\r\n    //   let data = {...value,values:selectData}\r\n    //   console.log(data)\r\n    //     onChangeHandeler(data,index)\r\n    // }, [selectData])\r\n        // console.log(getValues('values'))\r\n    return (\r\n        <FormElemnts>\r\n          <form onChange={onChange}>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'required'}>Required</EditLabel>\r\n                <InputWrap>\r\n                  <input type='checkbox' name={'required'} {...register('required')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={name}>Label</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={name} className={'inputItems'} {...register('label', { required: true })}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'description'}>Help Text</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'description'} className={'inputItems'} {...register('description')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'placeholder'}>placeholder</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'placeholder'} className={'inputItems'} {...register('placeholder')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'className'}>Class</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'className'}placeholder=\"use space for separeted class name\"  className={'inputItems'} {...register('className')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'name'}>Name</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'name'} className={'inputItems'} {...register('name')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'multiple'}></EditLabel>\r\n                  <InputWrap>\r\n                  <input type='checkbox' name={'multiple'} {...register('multiple')}/> Allow Multiple Selections\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'values'}>Options</EditLabel>\r\n                <InputWrap>\r\n                  <AddSelectOption selectData={selectData} setValue={setValue} data={data} index={index} register={register} onChangeHandeler={onChangeHandeler} setSelectData={setSelectData} />\r\n                </InputWrap>\r\n            </FormGroup>\r\n          </form>\r\n        </FormElemnts>\r\n    )\r\n}\r\n\r\nexport default EditFormValue\r\n","import React, { useEffect, useState } from 'react'\r\nimport {TypesContainer,FieldActions,Label, ActionBtn} from '../../Styles'\r\nimport { AiOutlineEdit,AiOutlineDelete,AiOutlineCopy,AiFillQuestionCircle } from \"react-icons/ai\";\r\nimport { FormHelperText,Tooltip } from '@material-ui/core';\r\n\r\nimport EditFormValue from './EditFormValue';\r\nimport Select from 'react-select'\r\nimport StateContext from '../../../context/StateContext';\r\nconst selectDataE =[\r\n  {value:'option1',label:'Option1'},\r\n  {value:'option2',label:'option2'},\r\n  {value:'option3',label:'option3'},\r\n]\r\n\r\nconst SelectT  =({type,name,index})=> {\r\n    const [data,setData] = useState(null)\r\n    const [selectedData,setSelectedData] = useState(selectDataE[0])\r\n    const [selectData,setSelectData] = useState(null)\r\n    useEffect(()=>{\r\n        setSelectData(type.values)\r\n    },[])\r\n    useEffect(()=>{\r\n        setSelectData(type.values)\r\n        if(!type.multiple){\r\n          // const dataa = {value:type.radio,label:type.radio.toUpperCase()}\r\n          // setSelectedData(dataa)\r\n        }else{\r\n        if(selectData !== null){\r\n          const dataa = selectData.filter(v=> v.selected === true)\r\n          setSelectedData(type.values)\r\n        }\r\n        }\r\n       \r\n    },[type])\r\n    useEffect(()=>{\r\n        if(!type.multiple){\r\n          if(type.radio){\r\n          const dataa = {value:type.radio,label:type.radio.toUpperCase()}\r\n          setSelectedData(dataa)}\r\n        }else{\r\n        if(selectData !== null){\r\n          const dataa = selectData.filter(v=> v.selected === true)\r\n          setSelectedData(type.values)\r\n        }\r\n        }\r\n    },[selectData])\r\n\r\n    const [editIsOpen,setEditOpen] = useState(false)\r\n    const handleChange=(data)=>{\r\n      setSelectedData(data)\r\n    }\r\n    useEffect(()=>{\r\n      setData(type)\r\n    },[type])\r\n    useEffect(()=>{\r\n      setData(type)\r\n    },[]) \r\n    return (\r\n        <StateContext.Consumer>\r\n          {({handleRemoveClick,onChangeHandler,handleCopyClick})=>{\r\n            return(<TypesContainer>\r\n                <FieldActions >\r\n                <ActionBtn onClick={()=>handleRemoveClick(index)} hoverBg={'#c66865'} del={true}><AiOutlineDelete/></ActionBtn>\r\n                <ActionBtn hoverBg={'#65aac6'} onClick={()=>setEditOpen(!editIsOpen)}><AiOutlineEdit/></ActionBtn>\r\n                <ActionBtn hoverBg={'#6fc665'} onClick={()=>handleCopyClick(index,data)}><AiOutlineCopy/></ActionBtn>\r\n                </FieldActions>\r\n                {editIsOpen && <Label htmlFor={name} >{data.label} \r\n                {data.required ? <span style={{color:'red',marginLeft:'5px',fontSize:'16px'}}>*</span> : null}\r\n                {data.description ? \r\n                <Tooltip title={data.description}>\r\n                  <span style={{marginLeft:'5px',fontSize:'16px'}}><AiFillQuestionCircle/></span>\r\n                </Tooltip> : null}\r\n                </Label>}\r\n                \r\n                {!editIsOpen && data &&\r\n                <>\r\n                <Label htmlFor={name} >{data.label} \r\n                {data.required ? <span style={{color:'red',marginLeft:'5px',fontSize:'16px'}}>*</span> : null}\r\n                {data.description ? \r\n                <Tooltip title={data.description}>\r\n                  <span style={{marginLeft:'5px',fontSize:'16px'}}><AiFillQuestionCircle/></span>\r\n                </Tooltip> : null}\r\n                </Label>\r\n                  <Select \r\n                    className={\"basic-single \" + data.className}\r\n                    classNamePrefix=\"select\"\r\n                    defaultValue={selectedData}\r\n                    isSearchable={false}\r\n                    options={selectData}\r\n                    onChange={handleChange}\r\n                    isMulti={data.multiple}\r\n                    placeholder={data.placeholder}\r\n                    />\r\n                  <FormHelperText>{data.description}</FormHelperText>\r\n                   </> \r\n                }\r\n                <div style={{display:'block'}}>\r\n                  {editIsOpen && <EditFormValue selectData={selectData} setSelectData={setSelectData} setData={setData} onChangeHandeler={onChangeHandler} index={index} data={data} name={name}/>}\r\n                </div>\r\n                </TypesContainer>)\r\n          }}\r\n            </StateContext.Consumer>\r\n          )\r\n\r\n}\r\n\r\nexport default  SelectT\r\n","import React from 'react'\r\nimport { useForm, } from \"react-hook-form\";\r\nimport {FormElemnts,FormGroup,InputWrap,EditLabel} from '../../Styles'\r\nimport Select from 'react-select'\r\nconst customStyles = {\r\n  container: (provided, state) => ({\r\n    ...provided,\r\n    width: '100%',\r\n  }),\r\n}\r\nconst btns =['default','danger','warning','info','primary','success']\r\nconst buttons = btns.map(v=>{\r\n  return {\r\n    value:v,\r\n    label:v.toUpperCase()\r\n  }\r\n})\r\nfunction EditFormValue({name,index,data,setData,onChangeHandeler}) {\r\n    const {register,getValues, setValue} = useForm({mode: 'onChange',  defaultValues:data})\r\n    // useEffect(()=>{\r\n    //    let value = watch()\r\n    //    console.log(value)\r\n    //    if(value.subtype){\r\n    //        let nV = {...value,subtype:value.subtype.value}\r\n    //        setData(nV)\r\n    //    }else{\r\n    //        setData(value)\r\n    //    }\r\n    // },[])\r\n    const handleChange=(data)=>{\r\n        let value = getValues()\r\n        setValue('subtype',data.value)\r\n        let nV = {...value,subtype:data.value}\r\n        console.log(nV)\r\n        setData(nV)\r\n        onChangeHandeler(nV,index)\r\n    }\r\n    const onChange=()=>{\r\n       let value = getValues()\r\n       console.log(value)\r\n       if(value.subtype && value.subtype.value){\r\n           let nV = {...value,subtype:value.subtype.value}\r\n           setData(nV)\r\n        onChangeHandeler(nV,index)\r\n\r\n       }else{\r\n           setData(value)\r\n        onChangeHandeler(value,index)\r\n\r\n       }\r\n    }\r\n    return (\r\n        <FormElemnts>\r\n        <form onChange={onChange}>\r\n        <FormGroup>\r\n                <EditLabel htmlFor={'required'}>Required</EditLabel>\r\n                <InputWrap>\r\n                  <input type='checkbox' name={'required'} {...register('required')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={name}>Label</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={name} className={'inputItems'} {...register('label', { required: true })}/>\r\n                </InputWrap>\r\n                    \r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'description'}>Help Text</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'description'} className={'inputItems'} {...register('description')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'placeholder'}>placeholder</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'placeholder'} className={'inputItems'} {...register('placeholder')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            \r\n            <FormGroup>\r\n                <EditLabel htmlFor={'className'}>class</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'className'} placeholder=\"use space for separeted class name\" className={'inputItems'} {...register('className')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'name'}>Name</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'name'} className={'inputItems'} {...register('name')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n           <FormGroup>\r\n                <EditLabel htmlFor={'value'}>value</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'value'}  className={'inputItems'} {...register('value')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'min'}>min</EditLabel>\r\n                  <InputWrap>\r\n                  <input type='number' name={'min'} className={'inputItems'} style={{width:'40%'}} {...register('min')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'max'}>max</EditLabel>\r\n                  <InputWrap>\r\n                  <input type='number' name={'max'}  placeholder='Value' className={'inputItems'} style={{width:'40%'}} {...register('max')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'step'}>step</EditLabel>\r\n                  <InputWrap>\r\n                  <input type='number' name={'step'} className={'inputItems'} style={{width:'40%'}} {...register('step')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            </form>\r\n        </FormElemnts>\r\n    )\r\n}\r\n\r\nexport default EditFormValue\r\n","import React, { useEffect, useState } from 'react'\r\nimport {TypesContainer,FieldActions,Label, ActionBtn} from '../../Styles'\r\nimport { AiOutlineEdit,AiOutlineDelete,AiOutlineCopy,AiFillQuestionCircle } from \"react-icons/ai\";\r\nimport EditFormValue from './EditFormValue';\r\nimport StateContext from '../../../context/StateContext';\r\nimport { FormHelperText,Tooltip } from '@material-ui/core';\r\n\r\nconst Numbers  =({type,name,index})=> {\r\n    const [data,setData] = useState(null)\r\n    const [editIsOpen,setEditOpen] = useState(false)\r\n    useEffect(()=>{\r\n      setData(type)\r\n    },[type])\r\n    useEffect(()=>{\r\n      setData(type)\r\n    },[])\r\n    return (\r\n        <StateContext.Consumer>\r\n          {({handleRemoveClick,onChangeHandler,handleCopyClick})=>{\r\n            return(<TypesContainer>\r\n                <FieldActions >\r\n                <ActionBtn onClick={()=>handleRemoveClick(index)} hoverBg={'#c66865'} del={true}><AiOutlineDelete/></ActionBtn>\r\n                <ActionBtn hoverBg={'#65aac6'} onClick={()=>setEditOpen(!editIsOpen)}><AiOutlineEdit/></ActionBtn>\r\n                <ActionBtn hoverBg={'#6fc665'} onClick={()=>handleCopyClick(index,data)}><AiOutlineCopy/></ActionBtn>\r\n                </FieldActions>\r\n               {data !== null &&<Label>{data.label} \r\n                {data.required ? <span style={{color:'red',marginLeft:'5px',fontSize:'16px'}}>*</span> : null}\r\n                {data.description ? \r\n                <Tooltip title={data.description}>\r\n                  <span style={{marginLeft:'5px',fontSize:'16px'}}><AiFillQuestionCircle/></span>\r\n                </Tooltip> : null}\r\n                </Label>}\r\n               <br/>\r\n                {!editIsOpen && data &&<input type='number' placeholder={data.placeholder} className={'inputItems '+data.className} style={{maxWidth:'20%'}}/>}\r\n                {data !== null && <FormHelperText>{data.description}</FormHelperText>}\r\n                <div style={{display:'block'}}>\r\n                  {editIsOpen && <EditFormValue  setData={setData} onChangeHandeler={onChangeHandler} index={index} data={data} name={name}/>}\r\n                </div>\r\n                </TypesContainer>)\r\n          }}\r\n            </StateContext.Consumer>\r\n          )\r\n\r\n}\r\n\r\nexport default  Numbers\r\n","import React from 'react'\r\nimport { useForm, } from \"react-hook-form\";\r\nimport {FormElemnts,FormGroup,InputWrap,EditLabel} from '../../Styles'\r\nimport Select from 'react-select'\r\nconst customStyles = {\r\n  container: (provided, state) => ({\r\n    ...provided,\r\n    width: '100%',\r\n  }),\r\n}\r\nconst typess =['text','email','color','tel','password',]\r\nconst types = typess.map(v=>{\r\n  return {\r\n    value:v,\r\n    label:v.toUpperCase()\r\n  }\r\n})\r\nfunction EditFormValue({name,index,data,setData,onChangeHandeler}) {\r\n    const {register,getValues, setValue} = useForm({mode: 'onChange',  defaultValues:data})\r\n    // useEffect(()=>{\r\n    //    let value = watch()\r\n    //    console.log(value)\r\n    //    if(value.subtype){\r\n    //        let nV = {...value,subtype:value.subtype.value}\r\n    //        setData(nV)\r\n    //    }else{\r\n    //        setData(value)\r\n    //    }\r\n    // },[])\r\n    const handleChange=(data)=>{\r\n        let value = getValues()\r\n        console.log(value)\r\n        setValue('subtype',data.value)\r\n        let nV = {...value,subtype:data.value}\r\n        console.log(nV)\r\n        setData(nV)\r\n        onChangeHandeler(nV,index)\r\n    }\r\n    const onChange=()=>{\r\n       let value = getValues()\r\n       console.log(value)\r\n       if(value.subtype && value.subtype.value){\r\n           let nV = {...value,subtype:value.subtype.value}\r\n           setData(nV)\r\n        onChangeHandeler(nV,index)\r\n\r\n       }else{\r\n           setData(value)\r\n        onChangeHandeler(value,index)\r\n\r\n       }\r\n    }\r\n    return (\r\n        <FormElemnts>\r\n        <form onChange={onChange}>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'required'}>Required</EditLabel>\r\n                <InputWrap>\r\n                  <input type='checkbox' name={'required'} {...register('required')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={name}>Label</EditLabel>\r\n                <InputWrap>\r\n                  <textarea name={name} className={'inputItems'} style={{minHeight: '150px'}} {...register('label', { required: true })}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'description'}>Help Text</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'description'} className={'inputItems'} {...register('description')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'placeholder'}>placeholder</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'placeholder'} className={'inputItems'} {...register('placeholder')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            \r\n            <FormGroup>\r\n                <EditLabel htmlFor={'className'}>class</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'className'} placeholder=\"use space for separeted class name\" className={'inputItems'} {...register('className')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'name'}>Name</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'name'} className={'inputItems'} {...register('name')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <EditLabel>Types</EditLabel>\r\n              <InputWrap>\r\n               <Select \r\n                className=\"basic-single\"\r\n                classNamePrefix=\"select\"\r\n                defaultValue={{value:data.subtype,label:data.subtype.toUpperCase()}}\r\n                isSearchable={false}\r\n                name=\"color\"\r\n                options={types}\r\n                styles={customStyles}\r\n                onChange={handleChange}\r\n                />\r\n              \r\n                </InputWrap> \r\n              \r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'value'}>value</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'value'} placeholder='Value' className={'inputItems'} {...register('value')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'maxlength'}>max length</EditLabel>\r\n                  <InputWrap>\r\n                  <input type='number' name={'maxlength'} className={'inputItems'} style={{width:'40%'}} {...register('maxlength')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            \r\n            </form>\r\n        </FormElemnts>\r\n    )\r\n}\r\n\r\nexport default EditFormValue\r\n","import React, { useEffect, useState } from 'react'\r\nimport {TypesContainer,FieldActions,Label, ActionBtn} from '../../Styles'\r\nimport { AiOutlineEdit,AiOutlineDelete,AiOutlineCopy,AiFillQuestionCircle } from \"react-icons/ai\";\r\nimport { FormHelperText,Tooltip } from '@material-ui/core';\r\n\r\nimport EditFormValue from './EditFormValue';\r\nimport StateContext from '../../../context/StateContext';\r\nconst Textfield  =({type,name,index})=> {\r\n    const [data,setData] = useState(null)\r\n    const [editIsOpen,setEditOpen] = useState(false)\r\n    useEffect(()=>{\r\n      setData(type)\r\n    },[type])\r\n    useEffect(()=>{\r\n      setData(type)\r\n    },[])\r\n    return (\r\n        <StateContext.Consumer>\r\n          {({handleRemoveClick,onChangeHandler,handleCopyClick})=>{\r\n            return(<TypesContainer>\r\n                <FieldActions >\r\n                <ActionBtn onClick={()=>handleRemoveClick(index)} hoverBg={'#c66865'} del={true}><AiOutlineDelete/></ActionBtn>\r\n                <ActionBtn hoverBg={'#65aac6'} onClick={()=>setEditOpen(!editIsOpen)}><AiOutlineEdit/></ActionBtn>\r\n                <ActionBtn hoverBg={'#6fc665'} onClick={()=>handleCopyClick(index,data)}><AiOutlineCopy/></ActionBtn>\r\n                </FieldActions>\r\n                {data && <Label htmlFor={name} >{data.label} \r\n                {data.required ? <span style={{color:'red',marginLeft:'5px',fontSize:'16px'}}>*</span> : null}\r\n                {data.description ? \r\n                <Tooltip title={data.description}>\r\n                  <span style={{marginLeft:'5px',fontSize:'16px'}}><AiFillQuestionCircle/></span>\r\n                </Tooltip> : null}\r\n                </Label>}\r\n                <br/>\r\n                {!editIsOpen && data &&<input type={data.subtype} placeholder={data.placeholder} defaultValue={data.value} className={'inputItems '+data.className}/>}\r\n                {data !== null && <FormHelperText>{data.description}</FormHelperText>}\r\n                <div style={{display:'block'}}>\r\n                  {editIsOpen && <EditFormValue setData={setData} onChangeHandeler={onChangeHandler} index={index} data={data} name={name}/>}\r\n                </div>\r\n                </TypesContainer>)\r\n          }}\r\n            </StateContext.Consumer>\r\n          )\r\n\r\n}\r\n\r\nexport default  Textfield\r\n","import React from 'react'\r\nimport { useForm, } from \"react-hook-form\";\r\nimport {FormElemnts,FormGroup,InputWrap,EditLabel} from '../../Styles'\r\nimport Select from 'react-select'\r\nconst customStyles = {\r\n  container: (provided, state) => ({\r\n    ...provided,\r\n    width: '100%',\r\n  }),\r\n}\r\nconst typess =['textarea','quill','tinymice']\r\nconst types = typess.map(v=>{\r\n  return {\r\n    value:v,\r\n    label:v.toUpperCase()\r\n  }\r\n})\r\nfunction EditFormValue({name,index,data,setData,onChangeHandeler}) {\r\n    const {register,getValues, setValue} = useForm({mode: 'onChange',  defaultValues:data})\r\n    // useEffect(()=>{\r\n    //    let value = watch()\r\n    //    console.log(value)\r\n    //    if(value.subtype){\r\n    //        let nV = {...value,subtype:value.subtype.value}\r\n    //        setData(nV)\r\n    //    }else{\r\n    //        setData(value)\r\n    //    }\r\n    // },[])\r\n    const handleChange=(data)=>{\r\n        let value = getValues()\r\n        console.log(value)\r\n        setValue('subtype',data.value)\r\n        let nV = {...value,subtype:data.value}\r\n        console.log(nV)\r\n        setData(nV)\r\n        onChangeHandeler(nV,index)\r\n    }\r\n    const onChange=()=>{\r\n       let value = getValues()\r\n       console.log(value)\r\n       if(value.subtype && value.subtype.value){\r\n           let nV = {...value,subtype:value.subtype.value}\r\n           setData(nV)\r\n        onChangeHandeler(nV,index)\r\n\r\n       }else{\r\n           setData(value)\r\n        onChangeHandeler(value,index)\r\n\r\n       }\r\n    }\r\n    return (\r\n        <FormElemnts>\r\n        <form onChange={onChange}>\r\n        <FormGroup>\r\n                <EditLabel htmlFor={'required'}>Required</EditLabel>\r\n                <InputWrap>\r\n                  <input type='checkbox' name={'required'} {...register('required')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={name}>Label</EditLabel>\r\n                <InputWrap>\r\n                  <textarea name={name} className={'inputItems'} style={{minHeight: '150px'}} {...register('label', { required: true })}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'description'}>Help Text</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'description'} className={'inputItems'} {...register('description')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'placeholder'}>placeholder</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'placeholder'} className={'inputItems'} {...register('placeholder')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            \r\n            <FormGroup>\r\n                <EditLabel htmlFor={'className'}>class</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'className'} placeholder=\"use space for separeted class name\" className={'inputItems'} {...register('className')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'name'}>Name</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'name'} className={'inputItems'} {...register('name')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <EditLabel>Types</EditLabel>\r\n              <InputWrap>\r\n               <Select \r\n                className=\"basic-single\"\r\n                classNamePrefix=\"select\"\r\n                defaultValue={{value:data.subtype,label:data.subtype.toUpperCase()}}\r\n                isSearchable={false}\r\n                name=\"color\"\r\n                options={types}\r\n                styles={customStyles}\r\n                onChange={handleChange}\r\n                />\r\n              \r\n                </InputWrap> \r\n              \r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'value'}>value</EditLabel>\r\n                <InputWrap>\r\n                  <input type='text' name={'value'} placeholder='Value' className={'inputItems'} {...register('value')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'maxlength'}>max length</EditLabel>\r\n                  <InputWrap>\r\n                  <input type='number' name={'maxlength'} className={'inputItems'} style={{width:'40%'}} {...register('maxlength')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <EditLabel htmlFor={'rows'}>Rows</EditLabel>\r\n                  <InputWrap>\r\n                  <input type='number' name={'rows'} className={'inputItems'} style={{width:'40%'}} {...register('rows')}/>\r\n                </InputWrap>\r\n            </FormGroup>\r\n            \r\n            </form>\r\n        </FormElemnts>\r\n    )\r\n}\r\n\r\nexport default EditFormValue\r\n","import React, { useEffect, useState } from 'react'\r\nimport {TypesContainer,FieldActions,Label, ActionBtn} from '../../Styles'\r\nimport { AiOutlineEdit,AiOutlineDelete,AiOutlineCopy,AiFillQuestionCircle } from \"react-icons/ai\";\r\nimport { FormHelperText,Tooltip } from '@material-ui/core';\r\nimport EditFormValue from './EditFormValue';\r\nimport StateContext from '../../../context/StateContext';\r\nconst Textarea  =({type,name,index})=> {\r\n    const [data,setData] = useState(null)\r\n    const [editIsOpen,setEditOpen] = useState(false)\r\n    useEffect(()=>{\r\n      setData(type)\r\n    },[type])\r\n    useEffect(()=>{\r\n      setData(type)\r\n    },[])\r\n    return (\r\n        <StateContext.Consumer>\r\n          {({handleRemoveClick,onChangeHandler,handleCopyClick})=>{\r\n            return(<TypesContainer>\r\n                <FieldActions >\r\n                <ActionBtn onClick={()=>handleRemoveClick(index)} hoverBg={'#c66865'} del={true}><AiOutlineDelete/></ActionBtn>\r\n                <ActionBtn hoverBg={'#65aac6'} onClick={()=>setEditOpen(!editIsOpen)}><AiOutlineEdit/></ActionBtn>\r\n                <ActionBtn hoverBg={'#6fc665'} onClick={()=>handleCopyClick(index,data)}><AiOutlineCopy/></ActionBtn>\r\n                </FieldActions>\r\n                {data && <Label htmlFor={name} >{data.label} \r\n                {data.required ? <span style={{color:'red',marginLeft:'5px',fontSize:'16px'}}>*</span> : null}\r\n                {data.description ? \r\n                <Tooltip title={data.description}>\r\n                  <span style={{marginLeft:'5px',fontSize:'16px'}}><AiFillQuestionCircle/></span>\r\n                </Tooltip> : null}\r\n                </Label>}\r\n                <br/>\r\n                {!editIsOpen && data &&<textarea placeholder={data.placeholder} style={{width:'100%',minHeight:'140px'}} className={'inputItems '+ data.className} defaultValue={data.value}/>}\r\n                {data !== null && <FormHelperText>{data.description}</FormHelperText>}\r\n                <div style={{display:'block'}}>\r\n                  {editIsOpen && <EditFormValue setData={setData} onChangeHandeler={onChangeHandler} index={index} data={data} name={name}/>}\r\n                </div>\r\n                </TypesContainer>)\r\n          }}\r\n            </StateContext.Consumer>\r\n          )\r\n\r\n}\r\n\r\nexport default  Textarea\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport Header from './FormTypes/Header';\r\nimport Autocomplete from './FormTypes/Autocomplete';\r\nimport Button from './FormTypes/Button';\r\nimport Checkbox from './FormTypes/Checkbox';\r\nimport Datefield from './FormTypes/Datefield';\r\nimport File from './FormTypes/File';\r\nimport Paragraph from './FormTypes/Paragraph';\r\nimport Radio from './FormTypes/Radio';\r\nimport SelectT from './FormTypes/Select';\r\nimport Numbers from './FormTypes/Number';\r\nimport Textfield from './FormTypes/Textfield';\r\nimport Textarea from './FormTypes/Textarea';\r\nconst Container = styled.div`\r\n  border: 1px solid lightgrey;\r\n  border-radius: 2px;\r\n  padding: 8px;\r\n  margin-bottom: 8px;\r\n  background-color: ${props => (props.isDragging ? 'lightgreen' : 'white')};\r\n`;\r\n\r\nconst renderFields = (type,name,index) => {\r\n            switch (type.type) {\r\n             case \"autocomplete\": \r\n              return <Autocomplete key={index} type={type} name={name} index={index}/>\r\n            case \"button\":\r\n              return <Button key={index} type={type} name={name} index={index}/>\r\n            case \"checkbox-group\":\r\n              return <Checkbox key={index} type={type} name={name} index={index}/>\r\n            case \"date\":\r\n              return <Datefield key={index} type={type} name={name} index={index}/>\r\n            case \"file\":\r\n              return <File key={index} type={type} name={name} index={index}/>\r\n            case \"header\":\r\n            return <Header key={index} type={type} name={name} index={index}/>\r\n            case \"number\":\r\n              return <Numbers key={index} type={type} name={name} index={index}/>\r\n            case \"paragraph\":\r\n            return <Paragraph key={index} type={type} name={name} index={index} />\r\n            case \"radio-group\":\r\n              return <Radio key={index} type={type} name={name} index={index} />\r\n            case \"select\":\r\n            return <SelectT key={index} type={type} name={name} index={index}/>\r\n            case \"text\":\r\n            return <Textfield  key={index} type={type} name={name} index={index}/>\r\n            case \"textarea\":\r\n            return <Textarea key={index} type={type} name={name} index={index}/>\r\n            default:\r\n                return (\r\n                    <div key={name}>\r\n                        <span className=\"red-text\">Invalid Field</span>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\nconst MainFromTask =(props)=> {\r\n    return (\r\n      <Draggable draggableId={props.id} index={props.index} >\r\n        {(provided, snapshot) => {\r\n        return(\r\n                <Container\r\n                {...provided.draggableProps}\r\n                {...provided.dragHandleProps}\r\n                ref={provided.innerRef}\r\n                isDragging={snapshot.isDragging}\r\n              >\r\n                {/* <Header type={props.type} name={props.id} handleRemoveClick={props.handleRemoveClick} index={props.index} onChangeHandeler={props.onChangeHandeler}/> */}\r\n                {renderFields(props.type,props.id,props.index)} \r\n              </Container>)\r\n\r\n        }\r\n        }\r\n\r\n      </Draggable>\r\n    );\r\n  }\r\nexport default MainFromTask","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport MainFromTask from './MainFormTask';\r\n\r\nconst Container = styled.div`\r\n  margin: 8px;\r\n  border: 1px dotted lightgrey;\r\n  border-radius: 2px;\r\n  width: 80%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst Title = styled.h3`\r\n  padding: 8px;\r\n`;\r\nconst FormList = styled.div`\r\n  padding: 8px;\r\n  transition: background-color 0.2s ease;\r\n  background-color: ${props => (props.isDraggingOver ? 'skyblue' : 'white')};\r\n  flex-grow: 1;\r\n  min-height: 100px;\r\n`;\r\n\r\n const MainColumn =(props)=> {\r\n    return (\r\n      <Container>\r\n        <Title>{props.column.title}</Title>\r\n        <Droppable droppableId={props.column.id}>\r\n          {(provided, snapshot) => {\r\n            return(\r\n            <FormList\r\n              ref={provided.innerRef}\r\n              {...provided.droppableProps}\r\n              isDraggingOver={snapshot.isDraggingOver}\r\n                >\r\n                { props.types.map((type, index) => ( <MainFromTask key={index} id={`${index}_${type.type}`} type={type} index={index} />))\r\n                }\r\n              {provided.placeholder}\r\n            </FormList>\r\n          )\r\n          }}\r\n        </Droppable>\r\n      </Container>\r\n    );\r\n  }\r\n  export default MainColumn\r\n","import React from 'react';\nimport styled from 'styled-components';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport initialData from './components/initial-data';\nimport TypeColumn from './components/TypeColumn';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport MainColumn from './components/MainColumn';\nimport './App.css'\nimport StateContext from './context/StateContext';\nimport ReactJson from 'react-json-view'\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-Content:center;\n`;\nconst Container = styled.div`\n  display: flex;\n  margin:auto;\n  width:90%;\n`;\nconst typesDefaultVal =\n[\n  {\n    \"type\": \"autocomplete\",\n    \"required\": false,\n    \"label\": \"Autocomplete\",\n    \"className\": \"form-control\",\n    \"name\": \"autocomplete-1625768524991\",\n    \"requireValidOption\": false,\n    \"values\": [\n      {\n        \"label\": \"Option 1\",\n        \"value\": \"option-1\",\n        \"selected\": true\n      },\n      {\n        \"label\": \"Option 2\",\n        \"value\": \"option-2\",\n        \"selected\": false\n      },\n      {\n        \"label\": \"Option 3\",\n        \"value\": \"option-3\",\n        \"selected\": false\n      }\n    ]\n  },\n  {\n    \"type\": \"button\",\n    \"label\": \"Button\",\n    \"subtype\": \"button\",\n    \"className\": \"btn-default btn\",\n    \"name\": \"button-1625768527241\",\n    \"style\": \"default\",\n  },\n  {\n    \"type\": \"checkbox-group\",\n    \"required\": false,\n    \"label\": \"Checkbox Group\",\n    \"toggle\": false,\n    \"inline\": false,\n    \"name\": \"checkbox-group-1625768529841\",\n    \"other\": false,\n    \"values\": [\n      {\n        \"label\": \"Option 1\",\n        \"value\": \"option-1\",\n        \"selected\": true\n      }\n    ]\n  },\n  {\n    \"type\": \"date\",\n    \"required\": false,\n    \"label\": \"Date Field\",\n    \"className\": \"form-control\",\n    \"name\": \"date-1625768532340\",\n    \n  },\n  {\n    \"type\": \"file\",\n    \"required\": false,\n    \"label\": \"File Upload\",\n    \"className\": \"form-control\",\n    \"name\": \"file-1625768536041\",\n    \"subtype\": \"file\",\n    \"multiple\": false\n  },\n  {\n    \"type\": \"header\",\n    \"subtype\": \"h1\",\n    \"label\": \"Header\",\n  },\n  {\n    \"type\": \"number\",\n    \"required\": false,\n    \"label\": \"Number\",\n    \"className\": \"form-control\",\n    \"name\": \"number-1625768540640\",\n    \n  },\n  {\n    \"type\": \"paragraph\",\n    \"subtype\": \"p\",\n    \"label\": \"Paragraph\",\n    \n  },\n  {\n    \"type\": \"radio-group\",\n    \"required\": false,\n    \"label\": \"Radio Group\",\n    \"inline\": false,\n    \"name\": \"radio-group-1625768546340\",\n    \"other\": false,\n    \"values\": [\n      {\n        \"label\": \"Option 1\",\n        \"value\": \"option-1\",\n        \"selected\": false\n      },\n      {\n        \"label\": \"Option 2\",\n        \"value\": \"option-2\",\n        \"selected\": false\n      },\n      {\n        \"label\": \"Option 3\",\n        \"value\": \"option-3\",\n        \"selected\": false\n      }\n    ]\n  },\n  {\n    \"type\": \"select\",\n    \"required\": false,\n    \"label\": \"Select\",\n    \"className\": \"form-control\",\n    \"name\": \"select-1625768562115\",\n    \"multiple\": false,\n    \"values\": [\n      {\n        \"label\": \"Option 1\",\n        \"value\": \"option-1\",\n        \"selected\": true\n      },\n      {\n        \"label\": \"Option 2\",\n        \"value\": \"option-2\",\n        \"selected\": false\n      },\n      {\n        \"label\": \"Option 3\",\n        \"value\": \"option-3\",\n        \"selected\": false\n      }\n    ]\n  },\n  {\n    \"type\": \"text\",\n    \"required\": false,\n    \"label\": \"Text Field\",\n    \"className\": \"form-control\",\n    \"name\": \"text-1625768554238\",\n    \"subtype\": \"text\"\n  },\n  {\n    \"type\": \"textarea\",\n    \"required\": false,\n    \"label\": \"Text Area\",\n    \"className\": \"form-control\",\n    \"name\": \"textarea-1625768560238\",\n    \"subtype\": \"textarea\"\n  }\n]\n\nclass App extends React.Component {\n  state = initialData;\n  \n  reorder = (list, startIndex, endIndex) => {\n        const result = list;\n        const [removed] = result.splice(startIndex, 1);\n        result.splice(endIndex, 0, removed);\n        return result;\n        };\n  onDragEnd = result => {\n    const { destination, source, draggableId } = result;\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    const start = this.state.columns[source.droppableId];\n    const finish = this.state.columns[destination.droppableId];\n    if (start === finish && start.id ===\"formType\") return\n    if (start !== finish && start.id ===\"formRender\") return\n    if (start === finish && start.id ===\"formRender\") {\n      const items = this.reorder(\n            start.types,\n            result.source.index,\n            result.destination.index\n            );\n            console.log(items)\n      let allData=[...items]\n      const newState = {\n      ...this.state,\n      columns: {\n        ...this.state.columns,\n        formRender:{\n          ...this.state.columns.formRender,\n          types:allData\n        }\n      },\n    };\n     this.setState(newState);\n     console.log(newState)\n    }\n    if(start !== finish ){\n        // Moving from one list to another\n    // console.log(finish.types)\n    const finishTaskIds = Array.from(finish.types);\n    finishTaskIds.splice(destination.index, 0, draggableId);\n    let v = typesDefaultVal.filter(v=>v.type===draggableId)\n    // console.log(finishTaskIds)\n    finishTaskIds[destination.index] = v[0]\n    const newFinish = {\n      ...finish,\n      types: finishTaskIds,\n    };\n\n    const newState = {\n      ...this.state,\n      columns: {\n        ...this.state.columns,\n        formRender:{\n          ...newFinish,\n          // taskIds:[draggableId]\n        }\n      },\n    };\n     this.setState(newState);\n    }\n  };\n  handleCopyClick= (index,data) => {   \n    const tempArray = [...this.state.columns.formRender.types];\n    tempArray.splice(index, 0,data)\n    const newState = {\n      ...this.state,\n      columns: {\n        ...this.state.columns,\n        formRender:{\n          ...this.state.columns.formRender,\n          types:tempArray\n        }\n      },\n    };\n     this.setState(newState);\n    if(!tempArray.length) return\n    }\n    handleSet= (data) => {   \n      if(data){\n         const newState = {\n      ...this.state,\n      columns: {\n        ...this.state.columns,\n        formRender:{\n          ...this.state.columns.formRender,\n          types:data\n        }\n      },\n    };\n    this.setState(newState);\n     return 'Done'\n\n      }\n    }\n    handleGet= () => {   \n      return this.state.result \n    }\n    handleClear= () => { \n    const newState = {\n      ...this.state,\n      result:[],\n      columns: {\n        ...this.state.columns,\n        formRender:{\n          ...this.state.columns.formRender,\n          types:[]\n        }\n      },\n    };\n     this.setState(newState);\n     return 'Done'\n    }\n  handleRemoveClick =( index) => {   \n    const tempArray = [...this.state.columns.formRender.types];\n    tempArray.splice(index, 1)\n    const newState = {\n      ...this.state,\n      columns: {\n        ...this.state.columns,\n        formRender:{\n          ...this.state.columns.formRender,\n          types:tempArray\n        }\n      },\n    };\n     this.setState(newState);\n    if(!tempArray.length) return\n    }\n  onChangeHandler = (data,index)=>{\n      console.log(index)             \n    const tempArray = [...this.state.columns.formRender.types];\n    tempArray.splice(index, 1, data)\n    // tempArray[index] = data\n    console.log(tempArray)\n    const newState = {\n      ...this.state,\n      columns: {\n        ...this.state.columns,\n        formRender:{\n          ...this.state.columns.formRender,\n          types:tempArray\n        }\n      },\n    };\n    this.setState(newState);\n  }\n  componentDidUpdate(previousProps, previousState){\n    if(previousState.columns.formRender.types !== this.state.columns.formRender.types){\n      let data = Array.from(this.state.columns.formRender.types)\n      const result = data.map(v=> {\n        // if(v.radio) delete v.radio\n        const {radio, ...newObj} = v;\n        return newObj\n      })\n     const newState = {\n        ...this.state,\n        result:result\n      };\n    this.setState(newState);\n\n    }\n    // console.log('updated',this.state.columns.formRender.types)\n  }\n  render() {\n    const allTypes = this.state.types\n    const types = this.state.columns.formRender.types\n    console.log(this.state)\n    return (\n      <>\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <StateContext.Provider value={{data:this.state.columns.formRender.types,handleCopyClick:this.handleCopyClick,onChangeHandler:this.onChangeHandler,handleRemoveClick:this.handleRemoveClick}}>\n        <Container>\n          <TypeColumn  column={this.state.columns.formType} types={allTypes} />\n          <MainColumn  column={this.state.columns.formRender} types={types}/>\n        </Container>\n        </StateContext.Provider>\n      </DragDropContext>\n      <ButtonContainer>\n        <ButtonGroup\n        color=\"primary\"\n        aria-label=\"vertical outlined primary button group\"\n        >\n        <Button onClick={this.handleClear}>Clear</Button>\n        <Button onClick={this.handleGet}>Get Data</Button>\n        <Button>Save</Button>\n      </ButtonGroup>\n\n      </ButtonContainer>\n      <code style={{width:'70%',fontSize:'14px',margin:'0 auto'}}>{JSON.stringify(this.state.result)}</code>\n       <ReactJson src={types} /> \n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App ref={(ourComponent) => {\n      window.handleGet = ourComponent.handleGet\n      window.handleSet = ourComponent.handleSet\n      window.handleClear = ourComponent.handleClear\n\n      }}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}